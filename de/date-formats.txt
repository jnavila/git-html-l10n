DATUMSFORMATE
-------------

Die Umgebungsvariablen `GIT_AUTHOR_DATE`, und `GIT_COMMITTER_DATE` unterstützen die folgenden Datumsformate:

Git-internes Format::
	It is `<unix-timestamp> <time-zone-offset>`, where `<unix-timestamp>` is the number of seconds since the UNIX epoch. `<time-zone-offset>` is a positive or negative offset from UTC. For example CET (which is 1 hour ahead of UTC) is `+0100`.

RFC 2822::
	Das Standard-E-Mail-Format, wie es in RFC 2822 definiert ist. Zum Beispiel `Thu, 07 Apr 2005 22:13:13 +0200`.

ISO 8601::
	Uhrzeit und Datum nach dem ISO 8601-Standard, z. B. `2005-04-07T22:13:13`. Der Parser akzeptiert auch ein Leerzeichen anstelle des Zeichens "T". Bruchteile einer Sekunde werden ignoriert, zum Beispiel wird `2005-04-07T22:13:13.019` als `2005-04-07T22:13:13` behandelt.
+
NOTE: Außerdem wird das Datum in folgenden Formaten akzeptiert: `YYYY.MM.DD`, `MM/DD/YYYY` und `DD.MM.YYYY`.

ifdef::git-commit[]
Zusätzlich zur Erkennung aller oben genannten Datumsformate versucht die Option `--date` auch, andere, eher menschenbezogene Datumsformate zu verstehen, wie z. B. relative Datumsangaben wie "gestern" oder "letzten Freitag um 12 Uhr".
endif::git-commit[]
