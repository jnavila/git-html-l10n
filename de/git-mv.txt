git-mv(1)
=========

NAME
----
git-mv - Eine Datei, ein Verzeichnis oder einen Symlink verschieben oder umbenennen


ÜBERSICHT
---------
[verse]
'git mv' <Optionen>... <Argumente>...

BESCHREIBUNG
------------
Eine Datei, ein Verzeichnis oder einen Symlink verschieben oder umbenennen

 git mv [-v] [-f] [-n] [-k] <Quelle> <Ziel>
 git mv [-v] [-f] [-n] [-k] <Quelle> ... <Zielverzeichnis>

In der ersten Form wird <Quelle> umbenannt, welches bereits vorhanden sein muss und entwedet eine Datei, ein Symlink oder ein Verzeichnis sein muss zu <Ziel>. In der zweiten Form muss das letzte Argument ein vorhandenes Verzeichnis sein; die gegebenen Quellen werden in dieses Verzeichnis verschoben.

Die Bereitstellung wird nach erfolgreichem Beenden aktualisiert, die Änderung muss aber dennoch eingetragen werden.

OPTIONEN
--------
-f::
--force::
	Erzwinge Umbenennen oder Verschieben einer Datei, selbst wenn das Ziel bereits existiert
-k::
	Überspringe Verschiebe- oder Umbenennungsaktionen, die zu einem Fehler führen würden. Ein Fehler geschieht, wenn die Quelle weder vorhanden ist, noch von Git kontrolliert wird oder wenn eine bereits vorhandene Datei überschrieben werden würde, außer wenn die Option '-f' gegeben wurde.
-n::
--dry-run::
	Führe nichts wirklich aus, zeige nur an, was geschehen würde

-v::
--verbose::
	Report the names of files as they are moved.

SUBMODULES
----------
Moving a submodule using a gitfile (which means they were cloned with a Git version 1.7.8 or newer) will update the gitfile and core.worktree setting to make the submodule work in the new location. It also will attempt to update the submodule.<name>.path setting in the linkgit:gitmodules[5] file and stage that file (unless -n is used).

BUGS
----
Each time a superproject update moves a populated submodule (e.g. when switching between commits before and after the move) a stale submodule checkout will remain in the old location and an empty directory will appear in the new location. To populate the submodule again in the new location the user will have to run "git submodule update" afterwards. Removing the old directory is only safe when it uses a gitfile, as otherwise the history of the submodule will be deleted too. Both steps will be obsolete when recursive submodule update has been implemented.

GIT
---
Teil der linkgit:git[1] Suite
