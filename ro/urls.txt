GIT URLS[[URLS]]
----------------

In general, URLs contain information about the transport protocol, the address of the remote server, and the path to the repository. Depending on the transport protocol, some of this information may be absent.

Git supports ssh, git, http, and https protocols (in addition, ftp and ftps can be used for fetching, but this is inefficient and deprecated; do not use them).

Transportul nativ (adică git:// URL) nu face autentificare și ar trebui utilizat cu precauție în rețelele nesecurizate.

Următoarele sintaxe pot fi utilizate cu acestea:

- ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/path/to/repo.git/
- git://host.xz{startsb}:port{endsb}/path/to/repo.git/
- http{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/
- ftp{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/

O sintaxă alternativă de tip scp poate fi utilizată, de asemenea, cu protocolul ssh:

- {startsb}user@{endsb}host.xz:path/to/repo.git/

Această sintaxă este recunoscută numai dacă nu există bariere înaintea primelor două puncte. Acest lucru ajută la diferențierea unei căi locale care conține două puncte. De exemplu, calea locală `foo:bar` ar putea fi specificată ca o cale absolută sau `./foo:bar` pentru a evita să fie interpretată greșit ca o adresă url ssh.

Protocoalele ssh și git acceptă, în plus, extinderea ~username:

- ssh://{startsb}utilizator@{endsb}host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/
- git://host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/
- {startsb}utilizator@{endsb}host.xz:/~{startsb}user{endsb}/path/to/repo.git/

Pentru depozitele locale, de asemenea suportate nativ de Git, se pot folosi următoarele sintaxe:

- /path/to/repo.git/
- \file:///path/to/repo.git/

ifndef::git-clone[]
Aceste două sintaxe sunt în mare parte echivalente, cu excepția clonării, când prima implică opțiunea --local. Consultați linkgit:git-clone[1] pentru detalii.
endif::git-clone[]

ifdef::git-clone[]
Aceste două sintaxe sunt în mare parte echivalente, cu excepția faptului că prima implică opțiunea --local.
endif::git-clone[]

'git clone', 'git fetch' și 'git pull', dar nu și 'git push', vor accepta, de asemenea, un fișier bundle adecvat. A se vedea linkgit:git-bundle[1].

Atunci când Git nu știe cum să gestioneze un anumit protocol de transport, încearcă să utilizeze ajutorul de la distanță "remote-<transport>", dacă există unul. Pentru a solicita în mod explicit un ajutor la distanță, se poate utiliza următoarea sintaxă:

- <transport>::<address>

unde <address> poate fi o cale, un server și o cale sau un șir arbitrar de tip URL recunoscut de ajutorul specific de la distanță care este invocat. Pentru detalii, consultați linkgit:gitremote-helpers[7].

Dacă există un număr mare de depozite la distanță cu nume similare și doriți să utilizați un format diferit pentru acestea (astfel încât URL-urile pe care le utilizați să fie rescrise în URL-uri care funcționează), puteți crea o secțiune de configurare a formularului:

------------
	[url "<actual-url-base>"]
		insteadOf = <other-url-base>
------------

De exemplu, cu aceasta:

------------
	[url "git://git.host.xz/"]
		insteadOf = host.xz:/path/to/
		insteadOf = work:
------------

o adresă URL de tipul "work:repo.git" sau "host.xz:/path/to/repo.git" va fi rescrisă în orice context care consideră că o adresă URL este "git://git.host.xz/repo.git".

Dacă doriți să rescrieți URL-urile doar pentru push, puteți crea o secțiune de configurare a formularului:

------------
	[url "<actual-url-base>"]
		pushInsteadOf = <other-url-base>
------------

De exemplu, cu aceasta:

------------
	[url "ssh://example.org/"]
		pushInsteadOf = git://example.org/
------------

o adresă URL de tipul "git://example.org/path/to/repo.git" va fi rescrisă în "ssh://example.org/path/to/repo.git" pentru împingeri, dar pentru extrageri se va utiliza în continuare adresa URL originală.
