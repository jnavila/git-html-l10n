git-mailinfo(1)
===============

NOME
----
git-mailinfo - Extrai o patch e a autoria de uma única mensagem de e-mail


RESUMO
------
[verse]
'git mailinfo' [-k|-b] [-u | --encoding=<encoding> | -n]
	       [--[no-]scissors] [--quoted-cr=<ação>]
	       <msg> <patch>


DESCRIÇÃO
---------
Reads a single e-mail message from the standard input, and writes the commit log message in <msg> file, and the patches in <patch> file. The author name, e-mail and e-mail subject are written out to the standard output to be used by 'git am' to create a commit. It is usually not necessary to use this command directly. See linkgit:git-am[1] instead.


OPÇÕES
------
-k::
	Usually the program removes email cruft from the Subject: header line to extract the title line for the commit log message. This option prevents this munging, and is most useful when used to read back 'git format-patch -k' output.
+
Especificamente, o seguinte é removido até que nenhum deles permaneça:
+
--
*	Os espaços à esquerda e à direita.

*	Iniciando com `Re:`, `re:`, e `:`.

*	As sequências dos caracteres entre colchetes à esquerda (entre `[` e `]`, geralmente
	`[PATCH]`).
--
+
Finalmente, as execuções do espaço são normalizadas para um único caractere de espaço ASCII.

-b::
	When -k is not in effect, all leading strings bracketed with '[' and ']' pairs are stripped. This option limits the stripping to only the pairs whose bracketed string contains the word "PATCH".

-u::
	The commit log message, author name and author email are taken from the e-mail, and after minimally decoding MIME transfer encoding, re-coded in the charset specified by `i18n.commitEncoding` (defaulting to UTF-8) by transliterating them. This used to be optional but now it is the default.
+
Observe que o patch é sempre utilizado como está, sem conversão do 'charset' (definição dos caracteres), mesmo com esta opção.

--encoding=<codificação>::
	Similar to -u. But when re-coding, the charset specified here is used instead of the one specified by `i18n.commitEncoding` or UTF-8.

-n::
	Desative toda a re-codificação do "charset" dos metadados.

-m::
--message-id::
	Copy the Message-ID header at the end of the commit message. This is useful in order to associate commits with mailing list discussions.

--scissors::
	Remove everything in body before a scissors line (e.g. "-- >8 --"). The line represents scissors and perforation marks, and is used to request the reader to cut the message at that line. If that line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used.
+
É útil caso queira iniciar a sua mensagem num tópico de discussão com comentários e sugestões sobre a mensagem que está respondendo e concluí-la com um envio do patch, separando a discussão e o início da mensagem do registro log do commit proposta com uma linha de grafo traçado.
+
É possível que seja predefinidamente ativada com a opção de configuração mailinfo.scissors.

--no-scissors::
	Ignore as linhas de grafo traçado. Útil para substituir as configurações de mailinfo.scissors.

--quoted-cr=<ação>::
	A ação quando processa as mensagens de e-mail enviadas com codificação base64 ou citada para impressão, as linhas decodificadas terminam com um CRLF em vez de um LF simples.
+
As ações válidas são:
+
--
*	`nowarn`: O git não fará nada quando tal CRLF for encontrado.
*	`warn`: O git emitirá um aviso para cada mensagem caso tal CRLF seja
	encontrado.
*	`strip`: O git converterá estes CRLF para LF.
--
+
The default action could be set by configuration option `mailinfo.quotedCR`. If no such configuration option has been set, `warn` will be used.

<msg>::
	Geralmente a mensagem do registro log do commit extraída do e-mail, exceto quando a linha do título que vem do Assunto do email.

<patch>::
	O patch extraído do e-mail.

CONFIGURAÇÃO
------------

include::includes/cmd-config-section-all.txt[]

include::config/mailinfo.txt[]

GIT
---
Parte do conjunto linkgit:git[1]
