git-mailinfo(1)
===============

NOME
----
git-mailinfo - Extrai o patch e a autoria de uma única mensagem de e-mail


RESUMO
------
[verse]
'git mailinfo' [-k|-b] [-u | --encoding=<encoding> | -n]
	       [--[no-]scissors] [--quoted-cr=<ação>]
	       <msg> <patch>


DESCRIÇÃO
---------
Lê uma única mensagem de e-mail da entrada predefinida e grava a mensagem de registro de confirmação no arquivo `<msg>` e as correções no arquivo `<patch>`. O nome do autor, o e-mail e o assunto do e-mail são gravados na saída predefinida para serem usados pelo 'git am' para criar um commit. Normalmente, não é necessário usar esse comando diretamente. Em vez disso, consulte linkgit:git-am[1].


OPÇÕES
------
-k::
	Normalmente, o programa remove o lixo eletrônico da linha de cabeçalho Subject: (assunto) para extrair a linha de título da mensagem de registro do commit. Essa opção evita esta combinação sendo mais útil quando usada para ler a saída do comando 'git format-patch -k'.
+
Especificamente, o seguinte é removido até que nenhum deles permaneça:
+
--
*	Os espaços à esquerda e à direita.

*	Iniciando com `Re:`, `re:`, e `:`.

*	As sequências dos caracteres entre colchetes à esquerda (entre `[` e `]`, geralmente
	`[PATCH]`).
--
+
Finalmente, as execuções do espaço são normalizadas para um único caractere de espaço ASCII.

-b::
	Quando a opção `-k` não estiver em vigor, todas as strings iniciais entre parênteses com pares '[' e ']' serão removidas. Esta opção limita a remoção apenas aos pares cuja string entre colchetes contém a palavra "PATCH".

-u::
	A mensagem do registro log do commit, o nome do autor e seu e-mail são obtidos a partir do e-mail e após a decodificação mínima da codificação de transferência MIME, recodificados no conjunto de caracteres definido pela opção de configuração `i18n.commitEncoding` (predefinido para UTF-8), transliterando-os. Isso costumava ser opcional, agora é a predefinição.
+
Observe que o patch é sempre utilizado como está, sem conversão do 'charset' (definição dos caracteres), mesmo com esta opção.

--encoding=<codificação>::
	É similar a opção `-u`. Porém, ao recodificar será usado o conjunto de caracteres especificado aqui em vez do especificado através do `i18n.commitEncoding` ou do UTF-8.

-n::
	Desative toda a re-codificação do "charset" dos metadados.

-m::
--message-id::
	Copia o cabeçalho "Message-ID" no final da mensagem do commit. Isto é útil para associar commits a discussões em listas de discussão.

--scissors::
	Remova tudo no corpo antes de uma linha de retorno ("-- >8 --" por exemplo). A linha representa marcas de tesoura e de perfuração sendo usada para solicitar que o leitor corte a mensagem nessa linha. Se essa linha aparecer no corpo da mensagem antes do patch, tudo o que estiver antes dela (inclusive a própria linha da tesoura) será ignorado quando essa opção for usada.
+
É útil caso queira iniciar a sua mensagem num tópico de discussão com comentários e sugestões sobre a mensagem que está respondendo e concluí-la com um envio do patch, separando a discussão e o início da mensagem do registro log do commit proposta com uma linha de grafo traçado.
+
É possível que seja predefinidamente ativada com a opção de configuração mailinfo.scissors.

--no-scissors::
	Ignore as linhas de grafo traçado. Útil para substituir as configurações de mailinfo.scissors.

--quoted-cr=<ação>::
	A ação quando processa as mensagens de e-mail enviadas com codificação base64 ou citada para impressão, as linhas decodificadas terminam com um CRLF em vez de um LF simples.
+
As ações válidas são:
+
--
*	`nowarn`: O git não fará nada quando tal CRLF for encontrado.
*	`warn`: O git emitirá um aviso para cada mensagem caso tal CRLF seja
	encontrado.
*	`strip`: O git converterá estes CRLF para LF.
--
+
A ação predefinida pode ser definida através da opção de configuração `mailinfo.quotedCR`. Se esta opção de configuração não tiver sido definida, será usado o `warn`.

<msg>::
	Geralmente a mensagem do registro log do commit extraída do e-mail, exceto quando a linha do título que vem do Assunto do email.

<patch>::
	O patch extraído do e-mail.

CONFIGURAÇÃO
------------

include::includes/cmd-config-section-all.txt[]

include::config/mailinfo.txt[]

GIT
---
Parte do conjunto linkgit:git[1]
