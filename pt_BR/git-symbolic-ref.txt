git-symbolic-ref(1)
===================

NOME
----
git-symbolic-ref - Lê, altera e exclui refs simbólicas

RESUMO
------
[verse]
'git symbolic-ref' [-m <motivo>] <nome> <ref>
'git symbolic-ref' [-q] [--short] [--no-recurse] <nome>
'git symbolic-ref' --delete [-q] <nome>

DESCRIÇÃO
---------
Ao informar uma opção, lê em qual cabeçalho do ramo a referência simbólica informada se refere e gera o seu caminho em relação ao diretório `.git/`. Normalmente você utilizaria o `HEAD` como uma opção `<nome>` para ver em qual ramo a sua árvore de trabalho está.

Quando foi dois argumentos fortem utilizados, cria ou atualiza uma referência simbólica <nome> para apontar para o ramo <ref> informado.

Ao utilizar `--delete` e um argumento adicional, exclui a referência simbólica informada.

Uma 'ref' simbólica é um arquivo regular que armazena um texto 'string' que começa com `ref: refs/`. Como por exemplo, o seu `.git/HEAD` é um arquivo regular cujo conteúdo seja `ref: refs/heads/master`.

OPÇÕES
------

-d::
--delete::
	Exclua o <nome> da "ref" simbólica.

-q::
--quiet::
	Não emita uma mensagem de erro caso o <nome> não seja uma referência simbólica, e sim um `HEAD` desanexado; em vez disso, saia com uma condição diferente de zero de forma silenciosa.

--short::
	Ao exibir o valor de um <nome> como uma "ref" simbólica, tente encurtar o valor, por exemplo, de `refs/heads/master` para `master`.

--recurse::
--no-recurse::
	Ao mostrar o valor do <nome> como uma referência simbólica, caso o <nome> se refera a outra referência simbólica, siga essa cadeia de referências simbólicas até que o resultado não aponte mais para uma referência simbólica (`--recurse`, que é o padrão). A opção `--no-recurse` é interrompida depois de apenas tirar a referência num único nível da referência simbólica.

-m::
	Atualiza o "reflog" para um <nome> com um <motivo>. É válido apenas durante a criação ou a atualização de uma "ref" simbólica.

OBSERVAÇÕES
-----------
No passado, `.git/HEAD` era um link simbólico apontando para `refs/heads/master`. Quando queríamos mudar para um outro ramo, fizemos `ln -sf refs/heads/newbranch .git/HEAD`, e quando queríamos descobrir em qual ramo estávamos, fazíamos `readlink .git/HEAD`. Como os links simbólicos não são totalmente portáteis, eles agora estão obsoletos e as referências simbólicas (conforme descrito acima) são utilizada de forma predefinida.

O comando 'git symbolic-ref' encerrará com a condição 0 caso o conteúdo da ref simbólica tenha sido impresso corretamente, com a condição 1 caso o nome solicitado não seja uma ref simbólica ou 128 caso ocorra um outro erro.

GIT
---
Parte do conjunto linkgit:git[1]
