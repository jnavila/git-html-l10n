git-clean(1)
============

NOME
----
git-clean - Remove arquivos não rastreados da árvore de trabalho

RESUMO
------
[verse]
'git clean' [-d] [-f] [-i] [-n] [-q] [-e <padrão>] [-x | -X] [--] [<pathspec>...]

DESCRIÇÃO
---------

Limpa a árvore de trabalho removendo recursivamente arquivos que não estão sob controle de versão, iniciando no diretório atual.

Normalmente, apenas os arquivos desconhecidos pelo Git são removidos, porém caso a opção `-x` seja utilizada, os arquivos ignorados também serão removidos. Isso pode, por exemplo, ser útil para remover todos os produtos da compilação.

Caso quaisquer argumentos `<pathspec>...` opcionais forem usados, apenas os caminhos que correspondam ao pathspec serão afetados.

OPÇÕES
------
-d::
	Normalmente, quando nenhum <pathspec> é definido, o `git clean` não recorre a diretórios não rastreados para evitar remover demais. Especifique `-d` para que ele recorra a esses diretórios também. Se um <pathspec> for especificado, a opção `-d` é irrelevante; todos os arquivos não rastreados que corresponderem aos caminhos especificados (com exceções para diretórios agrupados no git mencionados em `--force`) serão removidos.

-f::
--force::
	If the Git configuration variable clean.requireForce is not set to false, 'git clean' will refuse to delete files or directories unless given -f. Git will refuse to modify untracked nested git repositories (directories with a .git subdirectory) unless a second -f is given.

-i::
--interactive::
	Show what would be done and clean files interactively. See ``Interactive mode'' for details. Configuration variable `clean.requireForce` is ignored, as this mode gives its own safety protection by going interactive.

-n::
--dry-run::
	Don't actually remove anything, just show what would be done. Configuration variable `clean.requireForce` is ignored, as nothing will be deleted anyway.

-q::
--quiet::
	Fique quieto, relate somente erros, mas não os arquivos removidos com sucesso.

-e <padrão>::
--exclude=<padrão>::
	Utilize o padrão de exclusão informado além das regras de exclusão predefinidas (consulte linkgit:gitignore[5]).

-x::
	Não use as regras de ignorar predefinidas (consulte linkgit:gitignore[5]), mas ainda use as regras de ignorar informadas com as opções `-e` na linha de comando. Isso permite remover todos os arquivos não rastreados, incluindo produtos de compilação. Isso pode ser usado (possivelmente em conjunto com o comando 'git restore' ou 'git reset') para criar um diretório de trabalho original para testar uma compilação limpa.

-X::
	Remove apenas os arquivos ignorados pelo Git. Isso pode ser útil para reconstruir tudo do zero, porém, mantendo os arquivos criados manualmente.

Modo interativo
---------------
Quando o comando entra no modo interativo, ele exibe os arquivos e os diretórios que serão limpos entrando em seu loop de comando interativo.

O loop de comando exibe a lista de subcomandos disponíveis e fornece o prompt "Agora o quê>". Em geral, quando o prompt termina com um único '>', é possível escolher apenas uma das opções informadas e teclar "Enter" para selecioná-la:

------------
    *** Comandos ***
	1: limpa                2: filtra através de um padrão    3: seleciona através dos números
	4: pergunte a cada      5: encerra                        6: ajuda
    Agora o quê> 1
------------

Você também poderia dizer `c` ou` clean` acima, desde que a escolha seja única.

O laço de comando principal tem 6 subcomandos.

limpo::

   Comece limpando arquivos e diretórios e, em seguida, saia.

filtrar por padrão::

   Isso mostra os arquivos e diretórios a serem excluídos e emite um aviso "Input ignore patterns>>". Você pode inserir as predefinições separadas por espaço para excluir os arquivos e os diretórios da exclusão. Por exemplo, "*.c *.h" excluirá da remoção os arquivos que terminam com ".c" e ".h". Quando estiver satisfeito com o resultado da filtragem, pressione ENTER para retornar ao menu principal.

seleciona através dos números::

   Isso mostra os arquivos e diretórios a serem excluídos e emite um aviso "Select items to delete>>". Quando o prompt termina com um '>>' duplo como este, você pode fazer mais de uma seleção, concatenada com espaço em branco ou vírgula. Você também pode usar intervalos. Por exemplo, "2-5 7,9" para escolher 2,3,4,5,7,9 na lista. Se o segundo número num intervalo for omitido, todos os itens restantes serão selecionados. Por exemplo, "7-" para escolher 7,8,9 na lista. Você pode usar "*" para escolher tudo. Além disso, quando estiver satisfeito com o resultado filtrado, pressione ENTER para retornar ao menu principal.

pergunte a cada::

  Isso inicia a limpeza e você deve confirmar um por um para que os itens possam ser excluídos. Observe que esta ação não é tão eficiente quanto as duas ações acima.

sair::

  Isso permite que você encerre sem limpar nada.

ajuda::

  Exiba uma breve descrição de utilização do `git-clean` interativo.

CONFIGURAÇÃO
------------

include::includes/cmd-config-section-all.txt[]

include::config/clean.txt[]

VEJA TAMBÉM
-----------
linkgit:gitignore[5]

GIT
---
Parte do conjunto linkgit:git[1]
