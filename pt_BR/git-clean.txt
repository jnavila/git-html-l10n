git-clean(1)
============

NOME
----
git-clean - Remove arquivos não rastreados da árvore de trabalho

RESUMO
------
[verse]
'git clean' [-d] [-f] [-i] [-n] [-q] [-e <padrão>] [-x | -X] [--] <caminho>...

DESCRIÇÃO
---------

Limpa a árvore de trabalho removendo recursivamente arquivos que não estão sob controle de versão, iniciando no diretório atual.

Normalmente, apenas os arquivos desconhecidos pelo Git são removidos, porém caso a opção `-x` seja utilizada, os arquivos ignorados também serão removidos. Isso pode, por exemplo, ser útil para remover todos os produtos da compilação.

Se algum argumento opcional `<caminho>...` for dado, somente esses caminhos serão afetados.

OPÇÕES
------
-d::
	Normalmente, quando nenhum <caminho> for definido, o comando 'git clean' não retornará para os diretórios que não são monitorados para evitar a remoção excessiva. Utilize `-d` para que ele recorra a estes diretórios também. Caso algum caminho seja utilizado, o '-d' é irrelevante; todos os arquivos coincidentes não monitorados nos caminhos informados (com exceções para os diretórios git aninhados mencionados sob `--force`) serão removidos.

-f::
--force::
	Se a variável de configuração do Git `clean.requireForce` não estiver definida como 'false', o `git clean` recusará a exclusão de arquivos ou diretórios a menos que seja utilizado a opção `-f` ou `-i`. O Git se recusará a modificar repositórios git aninhados e sem lastro (diretórios sem um subdiretório .git) a menos que seja dado um segundo -f.

-i::
--interactive::
	Exibe o que seria feito e exclua os arquivos interativamente. Para mais detalhes consulte ``modo interativo''.

-n::
--dry-run::
	Na verdade, não remova nada, apenas demonstre o que seria feito.

-q::
--quiet::
	Fique quieto, relate somente erros, mas não os arquivos removidos com sucesso.

-e <padrão>::
--exclude=<padrão>::
	Utilize o padrão de exclusão informado além das regras de exclusão predefinidas (consulte linkgit:gitignore[5]).

-x::
	Não utilize as regras de exclusão predefinidas (see linkgit:gitignore[5]), porém continue a usar as regras de exclusão informadas com a opção `-e` na linha de comando. Isso permite remover todos os arquivos não rastreados, incluindo produtos de compilação. Isso pode ser utilizado (possivelmente em conjunto com 'git restore' ou 'git reset') para criar um novo diretório de trabalho para testar uma compilação limpa.

-X::
	Remove apenas os arquivos ignorados pelo Git. Isto pode ser útil para reconstruir tudo do zero, porém mantém os arquivos que foram criados manualmente.

Modo interativo
---------------
Quando o comando entra no modo interativo, ele exibe os arquivos e os diretórios que serão limpos entrando em seu loop de comando interativo.

O loop de comando exibe a lista de subcomandos disponíveis e fornece o prompt "Agora o quê>". Em geral, quando o prompt termina com um único '>', é possível escolher apenas uma das opções informadas e teclar "Enter" para selecioná-la:

------------
    *** Comandos ***
	1: limpa                2: filtra através de um padrão    3: seleciona através dos números
	4: pergunte a cada      5: encerra                        6: ajuda
    Agora o quê> 1
------------

Você também poderia dizer `c` ou` clean` acima, desde que a escolha seja única.

O laço de comando principal tem 6 subcomandos.

limpo::

   Comece limpando arquivos e diretórios e, em seguida, saia.

filtrar por padrão::

   Exibe os arquivos e os diretórios que serão excluídos e emite uma mensagem "Entre com os padrões que serão ignorados >>". Você pode inserir os padrões separados por espaço para tirar os arquivos e os diretórios da exclusão. Como por exemplo, "*.c *.h" removerá os arquivos que terminem com ".c" e ".h" do processo de exclusão. Quando estiver satisfeito com o resultado filtrado, pressione ENTER (e mais nada) para voltar ao menu principal.

seleciona através dos números::

   Exibe os arquivos e os diretórios que serão excluídos e emite um prompt "Selecione os itens para serem excluídos>>". Quando o prompt terminar com '>>' duplo, será possível fazer mais de uma seleção concatenada com espaço ou vírgula. Além disso, você pode utilizar intervalos. Por exemplo. "2-5 7,9" para escolher o 2,3,4,5,7,9 na lista. Caso o segundo número de um intervalo seja omitido, todos os itens restantes serão selecionados. Por exemplo. "7-" para escolher o 7,8,9 na lista. Você pode utilizar '*' para escolher tudo. Além disso, quando estiver satisfeito com o resultado que foi filtrado, pressione ENTER para retornar ao menu principal.

pergunte a cada::

  Isso inicia a limpeza e você deve confirmar um por um para que os itens possam ser excluídos. Observe que esta ação não é tão eficiente quanto as duas ações acima.

sair::

  Isso permite que você saia sem fazer limpeza.

ajuda::

  Exiba uma breve descrição de utilização do `git-clean` interativo.

CONFIGURAÇÃO
------------

include::includes/cmd-config-section-all.txt[]

include::config/clean.txt[]

VEJA TAMBÉM
-----------
linkgit:gitignore[5]

GIT
---
Parte do conjunto linkgit:git[1]
