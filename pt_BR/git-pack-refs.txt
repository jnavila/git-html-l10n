git-pack-refs(1)
================

NOME
----
git-pack-refs - Embale os cabeçalhos e a tags do pacote para acesso eficiente ao repositório

RESUMO
------
[verse]
'git pack-refs' [--all] [--no-prune] [--include <padrão>] [--exclude <padrão>]

DESCRIÇÃO
---------

Tradicionalmente, o cume dos ramos e as tags (coletivamente conhecidas como 'refs') eram armazenadas um arquivo por "ref" num diretório (sub) no diretório `$GIT_DIR/refs`. Enquanto muitos cumes dos ramos tendem a ser atualizadas com frequência, a maioria das tags e alguns cumes dos ramos nunca são atualizadas. Quando um repositório possui centenas ou milhares de tags, este formato de um arquivo por referência desperdiça armazenamento e prejudica o desempenho.

Este comando é utilizado para resolver o problema de armazenamento e desempenho, armazenando as refs num único arquivo, `$GIT_DIR/compact-refs`. Quando uma "ref" está ausente na hierarquia dos diretórios tradicionais `$GIT_DIR/refs`, ele é procurado neste arquivo e utilizado caso seja encontrado.

Atualizações subsequentes nos ramos sempre criam novos arquivos na hierarquia de diretórios `$GIT_DIR/refs`.

Uma prática recomendada para lidar com um repositório com muitas refs é empacotar as suas refs com `--all` uma vez e ocasionalmente executar o comando `git pack-refs`. As tags são estacionárias por definição e não devem mudar. Os cabeçalhos da ramificação serão empacotadas com os `pack-refs --all` iniciais, mas apenas os cabeçalhos da ramificação atualmente ativas, serão descompactadas e as próximas `pack-refs` (sem a opção `--all`) as deixarão descompactadas.


OPÇÕES
------

--all::

O comando, por padrão, empacota todas as tags e as refs que já estão empacotadas e não mexe com as outras refs. Isso se deve ao fato onde se espera que as ramificações sejam ativamente desenvolvidas, e o empacotamento das suas pontas não auxilia no desempenho. Essa opção faz com que todas as refs também sejam empacotadas, com exceção das refs ocultas, das refs quebradas e das refs simbólicas. Útil para um repositório com muitos ramos de interesse histórico.

--no-prune::

O comando normalmente remove as refs soltas na hierarquia `$GIT_DIR/refs` após empacotá-los. Esta opção diz para não fazê-lo.

--include <padrão>::

Empacota refs com base num padrão `glob(7)`. As repetições dessa opção acumulam padrões de inclusão. Se uma referência estiver incluída tanto em `--include` quanto em `--exclude`, a opção `--exclude` tem precedência. Por padrão, o uso da opção `--include` impedirá que todas as tags sejam incluídas. os refs simbólicos e os refs quebrados nunca serão empacotados. Quando usado com `--all`, será um noop. Use `--no-include` para limpar e redefinir a lista de padrões.

--exclude <padrão>::

Não empacote refs que correspondam ao padrão `glob(7)` fornecido. As repetições dessa opção acumulam padrões de exclusão. Use `--no-include` para limpar e redefinir a lista de padrões. Se uma ref já estiver empacotada, ao incluí-la com a opção `--exclude` não a desempacotará.

Quando usado com `--all`, empacota apenas as refs soltas que não correspondem a nenhum dos padrões `--exclude` fornecidos.

Quando usado com a opção `--include`, as refs fornecidas para a opção `--include`, menos as refs que sejam fornecidas para `--exclude`, serão empacotadas.


BUGS
----

A documentação mais antiga escrita antes da introdução do mecanismo "packed-refs" ainda pode dizer coisas como "o arquivo .git/refs/heads/<ramo> existe" quando significa "o ramo <ramo> existe".


GIT
---
Parte do conjunto linkgit:git[1]
