git-commit-tree(1)
==================

NOME
----
git-commit-tree - Create a new commit object


SINOPSE
-------
[verse]
'git commit-tree' <tree> [(-p <parent>)...]
'git commit-tree' [(-p <parent>)...] [-S[<keyid>]] [(-m <message>)...]
		  [(-F <file>)...] <tree>


DESCRIÇÃO
---------
Normalmente não é o que um usuário final gostaria de usar diretamente.  Em
vez disso consulte linkgit:git-commit[1].

Cria um novo objeto commit com base no objeto da árvore fornecida e emite o
novo id do objeto de commit no stdout. A mensagem do registro log é lido na
entrada padrão, a não ser que sejam fornecidas as opções `-m` ou` -F`.

The `-m` and `-F` options can be given any number of times, in any
order. The commit log message will be composed in the order in which the
options are given.

Um objeto commit pode ter qualquer quantidade matrizes. Um commit comum é
aquele tem exatamente uma matriz. Ter mais de uma matriz faz com que o
commit seja mesclado entre as várias linhas da história. Os commits iniciais
(root) não possuem matrizes.

Enquanto uma árvore representa a condição de um diretório de trabalho em
específico, um commit representa esta condição em "hora" e explica como
chegar até lá.

Normalmente, um commit identifica uma nova condição "HEAD" e embora o Git
não se importe onde você salva a nota sobre esse estado, na prática,
tendemos apenas a escrever o resultado no arquivo apontado por `.git / HEAD`
para que possamos sempre ver como estava a última condição do commit.

OPÇÕES
------
<tree>::
	An existing tree object.

-p <parent>::
	Cada `-p` indica o id de uma matriz do objeto commit.

-m <message>::
	Um parágrafo no registro log da mensagem de commit. O comando pode ser
	repetido mais de uma vez fazendo com que cada <mensagem> se torne um
	parágrafo individual.

-F <file>::
	Read the commit log message from the given file. Use `-` to read from the
	standard input. This can be given more than once and the content of each
	file becomes its own paragraph.

-S[<keyid>]::
--gpg-sinal[=<keyid>]::
	Confirmações de assinatura de GPG. O argumento `keyid` é opcional e
	padroniza a identidade do committer; se especificado, deve estar preso à
	opção sem espaço.

--no-gpg-sign::
	Não assine o commit com GPG-sign que contrarie a opção na linha de comando
	`--gpg-sign` dada em momento anterior.

Informação do Commit
--------------------

Os encapsulamentos de um commit:

- ids de todos os objetos matriz
- nome do autor, email e data
- nome e o endereço de email da pessoa que faz o commit e o momento em que foi
  feito.

O comentário de um commit é lido a partir do "stdin". Caso a entrada do
"changelog" não seja provida de um redirecionamento "<" o 'git commit-tree'
irá aguardar que um seja inserido e finalizado com ^D.

include::date-formats.txt[]

Discussão
---------

include::i18n.txt[]

ARQUIVOS
--------
/etc/mailname

VEJA TAMBÉM
-----------
linkgit:git-write-tree[1] linkgit:git-commit[1]

GIT
---
Parte do linkgit:git[1] suite
