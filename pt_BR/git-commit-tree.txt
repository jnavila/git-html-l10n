git-commit-tree(1)
==================

NOME
----
git-commit-tree - Cria um novo objeto commit


SINOPSE
-------
[verse]
'git commit-tree' <tree> [(-p <origem>)...]
'git commit-tree' [(-p <origem>)...] [-S[<keyid>]] [(-m <mensagem>)...]
		  [(-F <arquivo>)...] <árvore>


DESCRIÇÃO
---------
Normalmente não é o que um usuário final gostaria de usar diretamente.  Em
vez disso consulte linkgit:git-commit[1].

Cria um novo objeto commit com base no objeto da árvore fornecida e emite o
novo id do objeto de commit no stdout. A mensagem do registro log é lido na
entrada padrão, a não ser que sejam fornecidas as opções `-m` ou` -F`.

As opções `m` e` F` podem ser informadas várias vezes e em qualquer ordem. A
mensagem do registro log do commit será composta na ordem em que as opções
forem utilizadas.

Um objeto commit pode ter qualquer quantidade de origens. Um commit comum é
aquele tem exatamente uma origem. Ter mais de uma origem faz com que o
commit seja mesclado entre as várias linhas da história. Os commits iniciais
(root) não possuem origens.

Enquanto uma árvore representa a condição de um diretório de trabalho em
específico, um commit representa esta condição em "hora" e explica como
chegar até lá.

Normalmente, um commit identifica uma nova condição "HEAD" e embora o Git
não se importe onde você salva a nota sobre esse estado, na prática,
tendemos apenas a escrever o resultado no arquivo apontado por `.git / HEAD`
para que possamos sempre ver como estava a última condição do commit.

OPÇÕES
------
<árvore>::
	Um objeto árvore já existente.

-p <origem>::
	Cada `-p` indica o id de uma origem do objeto commit.

-m <mensagem>::
	Um parágrafo no registro log da mensagem de commit. O comando pode ser
	repetido mais de uma vez fazendo com que cada <mensagem> se torne um
	parágrafo individual.

-F <arquivo>::
	Leia a mensagem do registro log do commit de um arquivo informado. Utilize
	`-` para ler a entrada predefinida. Isso pode ser dado mais de uma vez e o
	conteúdo de cada arquivo se torna seu próprio parágrafo.

-S[<keyid>]::
--gpg-sign[=<keyid>]::
--no-gpg-sign::
	Commits assinados com o GPG O argumento `keyid` é opcional e padroniza a
	identidade de quem fez o commit; se utilizado, deve estar preso à opção sem
	espaço. `--no-gpg-sign` is useful to countermand a `--gpg-sign` option given
	earlier on the command line.

Informação do commit
--------------------

Os encapsulamentos de um commit:

- ids de todos os objetos da origem
- nome do autor, email e data
- nome e o endereço de email da pessoa que faz o commit e o momento em que foi
  feito.

O comentário de um commit é lido a partir do "stdin". Caso a entrada do
"changelog" não seja provida de um redirecionamento "<" o 'git commit-tree'
irá aguardar que um seja inserido e finalizado com ^D.

include::date-formats.txt[]

Discussão
---------

include::i18n.txt[]

ARQUIVOS
--------
/etc/mailname

VEJA TAMBÉM
-----------
linkgit:git-write-tree[1] linkgit:git-commit[1]

GIT
---
Parte do conjunto linkgit:git[1]
