git-shortlog(1)
===============

NOME
----
git-shortlog - Resume a saída do comando 'git log'

SINOPSE
-------
[verse]
'git shortlog' [<opções>] [<faixa de revisões>] [[--] <caminho>...]
git log --pretty=short | 'git shortlog' [<opções>]

DESCRIÇÃO
---------
Resume a saída 'git log' em um formato adequado para inclusão nos anúncios
de lançamento. Cada commit será agrupado por autor e título.

Além disso, o "[PATCH]" será retirado da descrição do commit.

Caso nenhuma revisão seja aprovada na linha de comando e a entrada
predefinida não seja um terminal ou não houver uma ramificação atual, o `git
shortlog` exibirá um resumo do registro log lido da entrada predefinida, sem
referência ao repositório atual.

OPÇÕES
------

-n::
--numbered::
	Classifique a saída de acordo com a quantidade de commits feitas pelo autor,
	em vez da ordem alfabética do autor.

-s::
--summary::
	Suprima a descrição do commit e forneça apenas um resumo da contagem dos
	commits.

-e::
--email::
	Exibir o endereço de email de cada autor.

--format[=<format>]::
	Em vez do assunto do commit, use outras informações para descrever cada
	commit.  O '<formato>' pode ser qualquer string aceita pela opção `--format`
	de 'git log', como '* [%h] %s'.  (Veja a seção "FORMATOS BONITOS" do
	linkgit:git-log[1].)

	Cada commit bem impresso será reorganizado antes de ser exibido.

-c::
--committer::
	Colete e exiba as identidades de quem realizou os commits em vez dos
	autores.

-w[<width>[,<indent1>[,<indent2>]]]::
	A quebra de linha da saída limitado a `largura`.  A primeira linha de cada
	entrada é recuada por espaços `indent1`, a segunda e as subsequentes são
	recuadas por espaços `indent2`. `width`, `indent1` e `indent2` são
	padronizados como 76, 6 e 9, respectivamente.
+
Caso a largura seja `0` (zero), recue as linhas da saída sem quebrá-las.

<intervalo da revisão>::
	Exibir apenas os commits no intervalo de revisões informados. Quando nenhum
	<intervalo de revisão> é usado, a predefinição é `HEAD` (ou seja, todo o
	histórico que leva ao commit atual). `origin..HEAD` determina que todos os
	commits alcançáveis a partir do commit atual (ou seja,` HEAD`), mas não de
	`origin`. Para uma listagem completa de como usar `<intervalo de revisão>`,
	consulte a seção "Especificando intervalos" do linkgit:gitrevisions[7].

[--] <caminho>...::
	Considere apenas os commits que são suficientes para explicar como os
	arquivos que coincidam com determinados caminhos foram criados.
+
Os caminhos podem precisar ser prefixados com um `--` para separá-los das
opções ou do intervalo de revisões, quando um conflito surgir.

:git-shortlog: 1
include::rev-list-options.txt[]

AUTORES DE MAPEAMENTO
---------------------

O recurso `.mailmap` é usado para agrupar os commits da mesma pessoa no
"shortlog", onde o seu nome ou endereço de email foram escritos de maneiras
diferentes.

include::mailmap.txt[]

GIT
---
Parte do linkgit:git[1] suite
