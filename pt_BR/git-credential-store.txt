git-credential-store(1)
=======================

NOME
----
git-credential-store - Auxiliar para o armazenamento de credenciais em disco

RESUMO
------
-------------------
git config credential.helper 'store [<opções>]'
-------------------

DESCRIÇÃO
---------

NOTE: Ao usar este auxiliar as suas senhas são armazenadas de forma criptografada no disco, protegida apenas pelas permissões do sistema de arquivos. Caso essa não seja uma troca aceitável de segurança, tente o linkgit:git-credential-cache[1] ou encontre um auxiliar que se integre ao armazenamento seguro informado pelo seu sistema operacional.

Este comando armazena as credenciais indefinidamente no disco para uso futuro dos programas Git.

Provavelmente você não vai querer invocar este comando diretamente; Ele deve ser utilizado pelas outras partes como um auxiliar da credencial do git. See linkgit:gitcredentials[7] or `EXAMPLES` below.

OPÇÕES
------

--file=<caminho>::

	Utilize `<caminho>` para localizar e armazenar as credenciais. O arquivo terá suas as permissões do sistema de arquivos definidos para impedir que os outros usuários no sistema o leiam, mas não serão criptografados ou protegidos. Caso não seja utilizado, as credenciais serão pesquisadas em `~/.git-credentials` e `$XDG_CONFIG_HOME/git/credentials`, as credenciais serão salvas em `~/.git-credentials` caso exista, ou `$XDG_CONFIG_HOME/git/credentials` caso exista e o primeiro não. Consulte também <<ARQUIVOS>>.

[[FILES]]
ARQUIVOS
--------

Caso não seja definido explicitamente com a opção `--file`, existem dois arquivos nos quais o comando `git-credential-store` procurará por credenciais em ordem de precedência:

~/.git-credentials::
	Arquivo de credenciais específicas do usuário.

$XDG_CONFIG_HOME/git/credentials::
	Arquivo de credenciais secundário específicas do usuário. Caso '$XDG_CONFIG_HOME' não seja utilizado ou esteja vazio, o `$HOME/.config/git/credentials` será utilizado. Quaisquer credenciais armazenadas neste arquivo não serão utilizadas caso `~/.git-credentials` também tiver uma credencial coincidente. É uma boa pratica não criar este arquivo caso você às vezes utilize versões mais antigas do Git que não são compatíveis.

Para pesquisas das credenciais, os arquivos são lidos na ordem acima, com a primeira credencial coincidente que for encontrada tendo precedência sobre as credenciais encontradas nos arquivos mais abaixo na lista.

Por predefinição o armazenamento das credenciais será gravado no primeiro arquivo existente na lista. Caso nenhum destes arquivos exista, serão criadas e gravadas em `~/.git-credentials`.

Ao apagar as credenciais, aquelas que forem coincidentes serão apagadas de todos os arquivos.

EXEMPLOS
--------

O objetivo deste auxiliar é reduzir a quantidade de vezes que você deve digitar o seu nome de usuário ou senha. Por exemplo:

------------------------------------------
$ git config credential.helper store
$ git push http://example.com/repo.git
Username: <digite o seu nome de usuário>
Password: <digite a sua senha>

[alguns dias depois]
$ git push http://example.com/repo.git
[as suas credenciais são utilizadas de forma automática]
------------------------------------------

FORMATO DE ARMAZENAMENTO
------------------------

O arquivo `.git credentials` é armazenado em texto puro sem formatação. Cada credencial é armazenada em sua própria linha como uma URL:

------------------------------
https://usuário:senha@example.com
------------------------------

Nenhum outro tipo de linha (por exemplo, as linhas vazias ou as linhas dos comentários) é permitido no arquivo, mesmo que algumas possam ser ignoradas silenciosamente. Não exiba ou edite o arquivo com editores.

Quando o Git precisa de autenticação para um contexto URL específico, o armazenamento de credenciais considerará o padrão deste contexto para coincidir com cada entrada no arquivo de credenciais. Caso o protocolo, o nome do host e o nome do usuário (caso tenhamos um) coincidam, a senha será retornada ao Git. Consulte a discussão da configuração em linkgit:gitcredentials[7] para mais informações.

GIT
---
Parte do conjunto linkgit:git[1]
