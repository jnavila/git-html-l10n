git-hash-object(1)
==================

NOME
----
git-hash-object - Compute a ID do objeto e opcionalmente crie uma bolha a partir de um arquivo


RESUMO
------
[verse]
'git hash-object' [-t <tipo>] [-w] [--path=<arquivo> | --no-filters]
		[--stdin [--literally]] [--] <arquivo>...
'git hash-object' [-t <tipo>] [-w] --stdin-paths [--no-filters]

DESCRIÇÃO
---------
Calcula o valor do ID do objeto para um objeto com o tipo especificado com o conteúdo do nome do arquivo (que pode estar fora da árvore de trabalho) e opcionalmente, grava o objeto gerado no banco de dados do objeto. Informa o ID do objeto na saída padrão. A predefinição retorna para "blob" quando o <tipo> não é informado.

OPÇÕES
------

-t <tipo>::
	Especifique o tipo (Predefinição: "blob" (bolha)).

-w::
	Registre de fato o objeto dentro do objeto do banco de dados.

--stdin::
	Leia o objeto da entrada padrão em vez de um arquivo.

--stdin-paths::
	Leia os nomes dos arquivos na entrada padrão, um por linha, em vez de ler da linha de comando.

--path::
	O objeto hash da maneira como ele foi encontrado no caminho informado. O local do arquivo não influencia diretamente o valor do hash, mas o caminho é utilizado para determinar quais os filtros Git que devem ser aplicados ao objeto antes de serem colocados no banco de dados do objeto, como resultado da aplicação dos filtros, a bolha real que foi colocada no banco de dados do objeto pode diferir do arquivo informado. Essa opção é útil principalmente para fazer o hash dos arquivos temporários localizados fora do diretório de trabalho ou nos arquivos lidos através do stdin.

--no-filters::
	Faça o hash do conteúdo da forma que estiver, ignorando qualquer filtro na entrada que teria sido selecionado pelo mecanismo dos atributos, incluindo a conversão da quebra de linha. Se o arquivo foi lido a partir da entrada padrão, isso sempre será feito de forma implícita, a menos que a opção `--path` seja utilizada.

--literally::
	Permita que a opção `--stdin` faça o hash de qualquer lixo num objeto solto que, de outra forma, não passaria na análise do objeto predefinido ou nas verificações do 'git-fsck'. Útil para realizar testes extensivos no Git ou reproduzir as características dos objetos corrompidos ou falsos encontrados por aí.

GIT
---
Parte do conjunto linkgit:git[1]
