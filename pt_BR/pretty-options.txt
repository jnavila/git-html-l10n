--pretty[=<formato>]::
--format=<formato>::

	Faça uma impressão bonita do conteúdo do registro log do commit em determinado formato, onde '<formato>' pode ser `oneline`, `short`, `medium`, `full`, `fuller`, `reference`, `email`, `raw`, `format:<texto>` e `tformat:<texto>`. Quando '<formato>' não for nenhum dos itens acima e possua um `%placeholder`, ele age como se a opção `--pretty=tformat:<formato>' tenha sido utilizado.
+
Consulte a seção "FORMATOS BONITOS" para obter detalhes adicionais para cada formato. Quando a parte do '=<formato>' é omitido a predefinição retorna para 'medium'.
+
Nota: você pode especificar o formato "pretty" padrão na configuração do repositório (consulte linkgit:git-config[1]).

--abbrev-commit::
	Em vez de exibir todos os 40 bytes hexadecimais do nome do objeto commit, exiba apenas um prefixo parcial. A quantidade dos dígitos não predefinidos podem ser definidos com a opção "--abbrev=<n>" (que também altera o diff gerado, caso seja exibido).
+
Isso deve tornar `--pretty=oneline` muito mais legível para pessoas que usam terminais com 80 colunas.

--no-abbrev-commit::
	Exibe o nome do objeto commit completo com 40 bytes hexadecimais. Isso nega o a opção `--abbrev-commit`, de forma explícita ou implícita pelas outras opções como "--oneline". Ele também substitui a variável `log.abbrevCommit`.

--oneline::
	Este é um atalho para "--pretty=oneline --abbrev-commit" ser utilizado junto.

--encoding=<codificação>::
	Os objetos commit registram a codificação utilizada para a mensagem do registro log em seu cabeçalho de codificação; esta opção pode ser usada para informar ao comando para novamente codificar a mensagem do registro log do commit na codificação preferida pelo usuário. Para os comandos não redirecionáveis, a predefinição retorna para UTF-8. Observe que caso um objeto afirma ser codificado com `X` e estamos gerando em` X`, o objeto será gerado de forma literal; isso significa que as sequências inválidas no commit original podem ser copiadas para a saída.

--expand-tabs=<n>::
--expand-tabs::
--no-expand-tabs::
	Execute uma expansão de guia (substitua cada guia por espaços suficientes para preencher a próxima coluna da exibição que é o múltiplo de '<n>') na mensagem do registro log antes de exibi-la na saída. A opção `--expand-tabs` é uma abreviação da opção `--expand-tabs=8`, a opção `--no-expand-tabs` é uma abreviação da opção `--expand-tabs=0`, que desativa a expansão da guia.
+
A predefinição é que as guias sejam expandidas em belos formatos que recuam a mensagem do registro log em 4 espaços (ou seja, 'medium', a predefinição, 'full' e 'fuller').

ifndef::git-rev-list[]
--notes[=<ref>]::
	Exiba as anotações (consulte linkgit:git-notes[1]) que acompanham o commit durante a exibição da mensagem do registro log do commit. Este é a predefinição para os comandos `git log`, `git show` e `git whatchanged` quando não haja nenhuma opção `--pretty`, `--format` ou `--oneline` utilizada na linha de comando.
+
É predefinido que as anotações exibidas são das anotações refs listadas nas variáveis `core.notesRef` e `notes.displayRef` (ou substituições correspondentes do ambiente). Para mais detalhes consulte linkgit:git-config[1].
+
Com um argumento opcional '<ref>', usa a "ref" para encontrar as notas que serão exibidas. A "ref" pode definir o nome completo da "ref" quando começar com `refs/notes/`; quando começa com `notes/`, `refs/` e caso contrário `refs/notes/` é prefixado para formar um nome completo da "ref".
+
Várias opções `--notes` podem ser combinadas para controlar quais as notas estão sendo exibidas. Exemplos: `--notes=foo` mostrará apenas as notas vindas de "refs/notes/foo"; `--notes=foo --notes` mostrará as notas vindas de "refs/notes/foo" e das notas ref(s) predefinidas.

--no-notes::
	Não exiba as anotações. Isso nega a opção `--notes` acima, redefinindo a lista das anotações das 'refs' a partir de onde as notas são exibidas. As opções são analisadas na ordem informada na linha de comando, portanto, "--notes --notes=foo --no-notes --notes=bar" exibirá apenas as anotações das "refs/notes/bar" por exemplo.

--show-notes[=<ref>]::
--[no-]standard-notes::
	Essas opções estão obsoletas. Em vez disso, utilize as opções --notes/--no-notes acima.
endif::git-rev-list[]

--show-signature::
	Verifique a validade de um objeto commit assinado, passando a assinatura para `gpg --verify` e exibe a sua saída.
