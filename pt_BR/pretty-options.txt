--pretty[=<formato>]::
--format=<formato>::

	Imprima o conteúdo dos registros do commit num determinado formato, onde '<format>' pode ser 'oneline', 'short', 'medium', 'full', 'fuller', 'reference', 'email', 'raw', 'format:<string>' e 'tformat:<string>'. Quando '<format>' não for nenhuma das opções acima e tem '%placeholder', ele age como se a opção '--pretty=tformat:<formato>' tivesse sido usado.
+
Consulte a seção "FORMATOS BONITOS" para obter alguns detalhes adicionais sobre cada formato. Quando a parte '=<formato>' é omitida, a predefinição é 'medium'.
+
Nota: você pode especificar o formato "pretty" padrão na configuração do repositório (consulte linkgit:git-config[1]).

--abbrev-commit::
	Em vez de mostrar o nome hexadecimal com 40 bytes completo do objeto commit, mostre um prefixo que nomeie o objeto de maneira exclusiva. A opção '--abbrev=<n>' (que também modifica a saída do diff, se for exibida) pode ser usada para especificar o comprimento mínimo do prefixo.
+
Isso deve tornar `--pretty=oneline` muito mais legível para pessoas que usam terminais com 80 colunas.

--no-abbrev-commit::
	Exibe o nome do objeto commit completo com 40 bytes hexadecimais. Isso nega o a opção `--abbrev-commit`, de forma explícita ou implícita pelas outras opções como "--oneline". Ele também substitui a variável `log.abbrevCommit`.

--oneline::
	Este é um atalho para "--pretty=oneline --abbrev-commit" ser utilizado junto.

--encoding=<codificação>::
	Os objetos commit registram a codificação dos caracteres usado para a mensagem de registro log em seu cabeçalho de codificação; esta opção pode ser usada para informar ao comando para recodificar a mensagem de registro log do commit na codificação preferida pelo usuário. Para comandos que não sejam para redirecionamento, o padrão é UTF-8. Observe que, se um objeto alegar ser codificado em `X` e estivermos produzindo em `X`, produziremos o objeto literalmente; isso significa que as sequências inválidas no commit original podem ser copiadas para o objeto criado. Da mesma maneira, se o iconv(3) não conseguir converter o commit, faremos o envio literal do objeto original.

--expand-tabs=<n>::
--expand-tabs::
--no-expand-tabs::
	Execute uma expansão de tabulação (substitua cada tabulação por espaços suficientes para preencher a próxima coluna de exibição que seja um múltiplo de '<n>') na mensagem de registro antes de mostrá-la na saída. A opção `--expand-tabs` é uma abreviação de `--expand-tabs=8` e `--no-expand-tabs` é uma abreviação de `--expand-tabs=0`, que desativa a expansão das guias.
+
È predefinido que as guias sejam expandidas em formatos bonitos que recuam a mensagem de registro em 4 espaços (ou seja, a predefinição 'medium', 'full' e 'fuller').

ifndef::git-rev-list[]
--notes[=<ref>]::
	Mostre as notas (consulte linkgit:git-notes[1]) que anotam o commit, ao mostrar a mensagem de registro do commit. Esta é a predefinição para os comandos `git log`, `git show` e `git whatchanged` quando não há nenhuma opção `--pretty`, `--format` ou `--oneline` usada na linha de comando.
+
É predefinido que as anotações exibidas são das anotações refs listadas nas variáveis `core.notesRef` e `notes.displayRef` (ou substituições correspondentes do ambiente). Para mais detalhes consulte linkgit:git-config[1].
+
Com um argumento opcional '<ref>', use a referência para localizar as notas a serem exibidas. Uma ref pode especificar o nome completo da ref quando começa com `refs/notes/`; quando começa com `notes/`, `refs/` e, caso contrário, `refs/notes/` é prefixado para formar o nome completo da ref.
+
Várias opções `--notes` podem ser combinadas para controlar quais as notas estão sendo exibidas. Exemplos: `--notes=foo` mostrará apenas as notas vindas de "refs/notes/foo"; `--notes=foo --notes` mostrará as notas vindas de "refs/notes/foo" e das notas ref(s) predefinidas.

--no-notes::
	Não mostrar as anotações. Isso anula a opção `--notes` acima, redefinindo a lista de refs das anotações a partir de onde as notas são exibidas. As opções são analisadas na ordem usada na linha de comando, portanto, por exemplo, `--notes --notes=foo --no-notes --notes=bar` mostrará apenas as notas de `refs/notes/bar`.

--show-notes-by-default::
	Mostra as notas predefinidas, a menos que sejam fornecidas opções para a exibição de notas específicas.

--show-notes[=<ref>]::
--[no-]standard-notes::
	Essas opções estão obsoletas. Em vez disso, utilize as opções --notes/--no-notes acima.
endif::git-rev-list[]

--show-signature::
	Verifique a validade de um objeto commit assinado, passando a assinatura para `gpg --verify` e exibe a sua saída.
