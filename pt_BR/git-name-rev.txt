git-name-rev(1)
===============

NOME
----
git-name-rev - Encontre os nomes simbólicos para determinadas "revs"


RESUMO
------
[verse]
'git name-rev' [--tags] [--refs=<padrão>]
	       ( --all | --stdin | <commit-ish>... )

DESCRIÇÃO
---------
Localiza os nomes simbólicos adequados para a revisão das pessoas através de qualquer formato analisável pelo comando 'git rev-parse'.


OPÇÕES
------

--tags::
	Não utilize os nomes dos ramos e sim apenas as tags para nomear os commits

--refs=<padrão>::
	Use apenas as refs cujos nomes coincidam com um determinado padrão shell. O padrão pode ser um nome do ramo, nome da tag ou um nome de referência totalmente qualificado. Caso seja utilizado várias vezes, utilize as refs cujos nomes coincidam com qualquer um dos padrões shell informados. Utilize `--no-refs` para limpar quaisquer padrões "ref" anteriores.

--exclude=<padrão>::
	Não utilize nenhuma "ref" cujo nome coincida com um determinado padrão shell. O padrão pode ser um nome do ramo, nome da tag ou um nome de referência totalmente qualificado. Caso seja utilizado várias vezes, uma "ref" será excluída quando coincidir com qualquer um dos padrões informados. Quando utilizado junto com `--refs`, uma "ref" será utilizada como uma correspondência apenas quando coincidir com pelo menos um padrão `--refs` e não coincidir com nenhum padrão `--exclude`. Utilize `--no-exclude` para limpar a lista dos padrões de exclusão.

--all::
	Liste todos os commits acessíveis de todas as "ref"

--annotate-stdin::
	Transforme o `stdin` substituindo todos os 40 caracteres hexadecimais SHA-1 (digamos `$hex`) por "$hex ($rev_name)". Quando usado apenas com `--name-only`, substitua por "$rev_name", omitindo o $hex completamente.
+
Por exemplo:
+
-----------
$ cat sample.txt

Uma revisão abreviada 2ae0a9cb82 não será substituída.
O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907,
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --annotate-stdin <sample.txt

Uma revisão abreviada 2ae0a9cb82 não será substituída.
O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907 (master),
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --name-only --annotate-stdin <sample.txt

Uma revisão abreviada do 2ae0a9cb82 não será substituída.
O nome completo após a substituição é master,
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad
-----------

--stdin::
	Esta opção é depreciada em favor de `git name-rev --annotate-stdin`. Eles são funcionalmente equivalentes.

--name-only::
	Em vez de imprimir o SHA-1 e o nome, imprima apenas o nome. Caso seja utilizado com `--tags`, o prefixo usual de "tags/" também é omitido do nome, coincidindo mais com a saída do `git-description`.

--no-undefined::
	Encerramento com um código de erro != 0 quando uma referência for indefinida, em vez de exibir `undefined`.

--always::
	Exiba o objeto commit abreviado exclusivamente como "fallback" (retirada).

EXEMPLOS
--------

Informado um commit, descubra onde ele é relativo às refs locais. Digamos que alguém tenha escrito sobre esse fantástico commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a. Obviamente, você analisa o commit, porém isso apenas informa o que aconteceu e não o contexto.

Entra o 'git name-rev':

------------
% git name-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a
33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0.99~940
------------

Agora você está mais esperto, pois sabe que ocorreram 940 revisões antes da versão v0.99.

Outra coisa legal que você pode fazer é:

------------
% git log | git name-rev --stdin
------------

GIT
---
Parte do conjunto linkgit:git[1]
