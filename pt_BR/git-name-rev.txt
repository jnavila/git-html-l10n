git-name-rev(1)
===============

NOME
----
git-name-rev - Encontre os nomes simbólicos para determinadas "revs"


RESUMO
------
[verse]
'git name-rev' [--tags] [--refs=<padrão>]
	       ( --all | --annotate-stdin | <commit-ish>... )

DESCRIÇÃO
---------
Localiza os nomes simbólicos adequados para a revisão das pessoas através de qualquer formato analisável pelo comando 'git rev-parse'.


OPÇÕES
------

--tags::
	Não utilize os nomes dos ramos e sim apenas as tags para nomear os commits

--refs=<padrão>::
	Only use refs whose names match a given shell pattern. The pattern can be a branch name, a tag name, or a fully qualified ref name. If given multiple times, use refs whose names match any of the given shell patterns. Use `--no-refs` to clear any previous ref patterns given.

--exclude=<padrão>::
	Não utilize nenhuma "ref" cujo nome coincida com um determinado padrão shell. O padrão pode ser um nome do ramo, nome da tag ou um nome de referência totalmente qualificado. Caso seja utilizado várias vezes, uma "ref" será excluída quando coincidir com qualquer um dos padrões informados. Quando utilizado junto com `--refs`, uma "ref" será utilizada como uma correspondência apenas quando coincidir com pelo menos um padrão `--refs` e não coincidir com nenhum padrão `--exclude`. Utilize `--no-exclude` para limpar a lista dos padrões de exclusão.

--all::
	Liste todos os commits acessíveis de todas as "ref"

--annotate-stdin::
	Transform stdin by substituting all the 40-character SHA-1 hexes (say $hex) with "$hex ($rev_name)". When used with --name-only, substitute with "$rev_name", omitting $hex altogether. This option was called `--stdin` in older versions of Git.
+
Por exemplo:
+
-----------
$ cat sample.txt

Uma revisão abreviada 2ae0a9cb82 não será substituída.
O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907,
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --annotate-stdin <sample.txt

Uma revisão abreviada 2ae0a9cb82 não será substituída.
O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907 (master),
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad

$ git name-rev --name-only --annotate-stdin <sample.txt

Uma revisão abreviada do 2ae0a9cb82 não será substituída.
O nome completo após a substituição é master,
enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad
-----------

--name-only::
	Instead of printing both the SHA-1 and the name, print only the name. If given with --tags the usual tag prefix of "tags/" is also omitted from the name, matching the output of `git-describe` more closely.

--no-undefined::
	Encerramento com um código de erro != 0 quando uma referência for indefinida, em vez de exibir `undefined`.

--always::
	Exiba o objeto commit abreviado exclusivamente como "fallback" (retirada).

EXEMPLOS
--------

Given a commit, find out where it is relative to the local refs. Say somebody wrote you about that fantastic commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a. Of course, you look into the commit, but that only tells you what happened, but not the context.

Entra o 'git name-rev':

------------
% git name-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a
33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0.99~940
------------

Agora você está mais esperto, pois sabe que ocorreram 940 revisões antes da versão v0.99.

Outra coisa legal que você pode fazer é:

------------
% git log | git name-rev --annotate-stdin
------------

GIT
---
Parte do conjunto linkgit:git[1]
