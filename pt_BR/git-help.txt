git-help(1)
===========

NOME
----
git-help - Exiba informações de ajuda sobre o Git

RESUMO
------
[verse]
'git help' [-a|--all] [--[no-]verbose] [--[no-]external-commands] [--[no-]aliases]
'git help' [[-i|--info] [-m|--man] [-w|--web]] [<comando>|<guia>]
'git help' [-g|--guides]
'git help' [-c|--config]
'git help' [--user-interfaces]
'git help' [--developer-interfaces]

DESCRIÇÃO
---------

Sem opções e sem informar '<comando>' ou '<doc>', serão exibidos na saída padrão um resumo do comando 'git' e uma lista dos comandos Git mais comumente utilizados.

Caso a opção `--all` ou `-a` seja utilizada, todos os comandos disponíveis serão exibidos na saída padrão.

Caso a opção `--guides` ou `-g` seja utilizada, uma lista do guia de conceitos do Git também será exibida na saída padrão.

Caso um comando, ou outra documentação seja usada, a página relevante será exibida. É predefinido que o programa 'man' seja utilizado para esta finalidade, porém pode ser substituído por outras opções ou variáveis de configuração.

Caso um apelido seja utilizado, o git exibe a definição do apelido na saída padrão. Para ver a página do manual para o comando ou apelido em questão, utilize `git <comando> --help`.

Observe que o `git --help ...` é idêntico ao `git help ...` porque o primeiro é convertido internamente para o último.

Para exibir a página do manual linkgit:git[1], utilize o comando `git help git`.

Esta página pode ser exibida com 'git help help' ou `git help --help`

OPÇÕES
------
-a::
--all::
	Exibe uma lista de todos os comandos disponíveis na saída padrão.

--no-external-commands::
	Quando utilizado com `--all`, exclua a listagem externa dos comandos "git-*" encontrados no `$PATH`.

--no-aliases::
	Quando utilizado com `--all`, exclua a listagem dos pseudônimos já configurados.

--verbose::
	Quando utilizado com a opção `--all`, imprima todas as descrições para todos os comandos que forem reconhecidos. Esta é a predefinição.

-c::
--config::
	Liste todas as variáveis de configuração disponíveis. Este é um breve resumo da lista em linkgit:git-config[1].

-g::
--guides::
	Exibe uma lista das guias do conceito do Git na saída padrão.

--user-interfaces::
	Exibe uma lista do repositório, do comando da documentação da interface do arquivo na saída padrão.
+
As interfaces dos arquivos em repositórios como `.git/info/exclude` estão documentadas aqui (consulte linkgit:gitrepository-layout[5]), bem como as configurações em árvore como `.mailmap` (consulte linkgit:gitmailmap[5 ]).
+
Esta seção da documentação também cobre convenções gerais ou generalizadas da interface de usuário (linkgit:gitcli[7] por exemplo) e pseudo-configurações como a interface baseada em arquivos `.git/hooks/*` descrita em linkgit:githooks[5 ].

--developer-interfaces::
	Exibe uma lista de formatos de arquivos, protocolos e outras documentações sobre as interfaces de desenvolvimento na saída padrão.

-i::
--info::
	Exiba a página do manual do comando no formato 'info'. O programa 'info' será utilizado para este fim.

-m::
--man::
	Exiba a página do manual para o comando no formato 'man'. Esta opção pode ser utilizada para substituir um valor definido na variável de configuração `help.format`.
+
É predefinido que o programa 'man' será utilizado para exibir a página do manual, mas a variável de configuração `man.viewer` pode ser utilizada para configurar outros programas de exibição (veja abaixo).

-w::
--web::
	Exiba a página do manual do comando no formato 'web' (HTML). Um navegador da web será utilizado para este fim.
+
O navegador da web pode ser definido utilizando a variável de configuração `help.browser` ou` web.browser` se o primeiro já não esteja definido. Caso nenhuma destas configurações sejam definidas, o script de ajuda `git web{litdd}browse` (invocado através do comando `git help`) por predefinição será escolhida a melhor opção. Para obter mais informações, consulte linkgit:git-web{litdd}browse[1].

VARIÁVEIS DE CONFIGURAÇÃO
-------------------------

help.format
~~~~~~~~~~~

A variável de configuração `help.format` será verificada caso nenhuma opção na linha de comando for utilizada. Os seguintes valores são compatíveis com esta variável; eles fazem com que 'git help' se comporte como a sua opção na linha de comando correspondente:

* "man" correspondente a '-m|--man',
* "info" correspondente a '-i|--info',
* "web" ou "html" correspondente a '-w|--web'.

help.browser, web.browser e browser.<ferramenta>.path
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

O `help.browser`, `web.browser` e `browser.<ferramenta>.path` também serão averiguados caso o formato 'web' seja selecionado (seja por uma opção na linha de comando ou por uma variável de configuração). Consulte '-w|--web' na seção OPÇÕES acima e linkgit:git-web{litdd}browse[1].

man.viewer
~~~~~~~~~~

A variável de configuração `man.viewer` será verificada caso o formato 'man' seja selecionado. Os seguintes valores são compatíveis atualmente:

* O "man": utiliza o programa 'man' como de costume,
* o "woman": utiliza o 'emacsclient' para iniciar o modo "woman" no emacs (isso só funciona a partir das versões 22 do emacsclient),
* o "konqueror": utiliza o 'kfmclient' para abrir a página do manual numa nova guia do konqueror (consulte 'Nota sobre o konqueror' abaixo).

Os valores para as outras ferramentas podem ser utilizadas caso haja uma entrada de configuração correspondente `man.<ferramenta>.cmd` (veja abaixo).

Vários valores que podem ser utilizados na variável de configuração `man.viewer`. Os seus programas correspondentes serão tentados na ordem listada no arquivo de configuração.

Esta configuração por exemplo:

------------------------------------------------
	[man]
		viewer = konqueror
		viewer = woman
------------------------------------------------

tentará utilizar o konqueror primeiro. Mas isso pode falhar (caso a variável DISPLAY não estiver definido por exemplo) e nesse caso, será feito a tentativa no modo woman do emacs.

Caso tudo falhe, ou caso nenhum visualizador esteja configurado, será feito uma tentativa no visualizador especificado na variável de ambiente `GIT_MAN_VIEWER`. Caso isso também falhe, o programa 'man' será testado mesmo assim.

man.<ferramenta>.path
~~~~~~~~~~~~~~~~~~~~~

Você pode informar de forma explicita um caminho completo para o seu visualizador man preferido, definindo a variável de configuração `man.<ferramenta>.path`. Por exemplo, você pode configurar o caminho absoluto para o konqueror, configurando 'man.konqueror.path'. Caso contrário, 'git help' assume que a ferramenta está disponível no seu `PATH`.

man.<ferramenta>.cmd
~~~~~~~~~~~~~~~~~~~~

Quando o visualizador man, definido através das variáveis de configuração `man.viewer`, não estiver entre as que são compatíveis, a variável de configuração correspondente `man.<ferramenta>.cmd` será pesquisada. Caso essa variável exista, a ferramenta informada será tratada como um comando personalizado e um shell eval será utilizado para executar o comando com a página do manual passada como argumentos.

Uma observação sobre o konqueror
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Quando o 'konqueror' for definido na variável de configuração `man.viewer`, iniciamos o 'kfmclient' para tentar abrir a página do manual num konqueror já aberto porém, numa nova guia, se for possível.

Para uma maior consistência, também tentamos esse truque caso 'man.konqueror.path' esteja definido em algo como `UM_CAMINHO_PARA_O/konqueror`. Significa que em vez disso, tentaremos iniciar o `UM_CAMINHO_PARA_O/kfmclient`.

Caso você realmente queira utilizar usar o 'konqueror', faça o seguinte:

------------------------------------------------
	[man]
		viewer = konq

	[man "konq"]
		cmd = O_CAMINHO_PARA_O/konqueror
------------------------------------------------

Observação sobre o comando `git config --global`
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Observe que todas estas variáveis de configuração, provavelmente devem ser definidas utilizando a opção `--global`, assim por exemplo:

------------------------------------------------
$ git config --global help.format web
$ git config --global web.browser firefox
------------------------------------------------

como provavelmente são mais específicos do usuário do que do repositório. Para mais informações, consulte linkgit:git-config[1].

GIT
---
Parte do conjunto linkgit:git[1]
