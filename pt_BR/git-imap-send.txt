git-imap-send(1)
================

NOME
----
git-imap-send - Envia uma coleção de patches do stdin para um diretório IMAP


RESUMO
------
[verse]
'git imap-send' [-v] [-q] [--[no-]curl]


DESCRIÇÃO
---------
Este comando carrega uma caixa de correio gerada com 'git format-patch' em
um diretório de rascunhos IMAP.  Permite que os patches sejam enviados como
ocorre com os outros emails ao utilizar clientes de email que não podem ler
diretamente os arquivos da caixa de correio. O comando também funciona com
qualquer caixa de correio geral na qual os e-mails tenham os campos "De",
"Data" e "Assunto" nesta ordem.

A típica utilização é algo como:

git format-patch --signoff --stdout --attach origin | git imap-send


OPÇÕES
------

-v::
--verbose::
	Seja loquaz.

-q::
--quiet::
	Fique em silêncio.

--curl::
	Utilize o libcurl para se comunicar com o servidor IMAP, a menos que faça um
	tunelamento para ele.  É Ignorado caso o Git tenha sido compilado sem a
	opção `USE_CURL_FOR_IMAP_SEND` definida.

--no-curl::
	Converse com o servidor IMAP utilizando as próprias rotinas IMAP do git em
	vez de utilizar as da libcurl.  É Ignorado caso o Git tenha sido compilado
	com a opção `NO_OPENSSL` definida.


CONFIGURAÇÃO
------------

Para utilizar a ferramenta, o 'imap.folder' e o 'imap.tunnel' ou o
'imap.host' devem ser configurados com os valores apropriados.

Variáveis
~~~~~~~~~

include::config/imap.txt[]

Exemplos
~~~~~~~~

Utilizando um modo de tunelamento:

..........................
[imap]
    folder = "INBOX.Drafts"
    tunnel = "ssh -q -C user@example.com /usr/bin/imapd ./Maildir 2> /dev/null"
..........................

Utilizando o modo direto:

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imap://imap.example.com
    user = bob
    pass = p4ssw0rd
.........................

Usando o modo direto com SSL:

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imaps://imap.example.com
    user = bob
    pass = p4ssw0rd
    port = 123
    sslverify = false
.........................


EXEMPLOS
--------
Para enviar os patches utilizando a interface IMAP do GMail, primeiro edite
o seu ~/.gitconfig para definir as configurações da sua conta:

---------
[imap]
	folder = "[Gmail]/Drafts"
	host = imaps://imap.gmail.com
	user = user@gmail.com
	port = 993
	sslverify = false
---------

Você pode precisar utilizar: folder = "[Google Mail]/Drafts" caso receba um
erro indicando que a "O diretório não existe".

Quando os commits estiverem prontos para serem enviados, execute o seguinte
comando:

  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send

Apenas certifique-se de desabilitar a quebra de linha no cliente de email (a
interface da Web do GMail sempre irá quebrar as linhas independentemente de
qualquer coisa, portanto, você precisará utilizar um cliente IMAP de
verdade).

CUIDADO
-------
Ainda é sua responsabilidade garantir que a mensagem de e-mail enviado pelo
seu programa de e-mail atenda aos padrões do seu projeto.  Muitos projetos
não gostam que os patches sejam anexados em mensagens de e-mail.  Alguns
agentes de correio transformarão os patches (quebras de linhas automática,
enviá-los como 'format=flowed' por exemplo) de maneira que irão fazê-los
falhar.  Você receberá chamas raivosas que o ridicularizarão na frente de
todo mundo se não prestar atenção.

O Thunderbird é um velho informado por ser problemático.  Os usuários do Thunderbird
podem querer visitar esta página da web para obter mais informações:
  http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email

VEJA TAMBÉM
-----------
linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)

GIT
---
Parte do conjunto linkgit:git[1]
