git-imap-send(1)
================

NOME
----
git-imap-send - Envia uma coleção de patches do stdin para um diretório IMAP


RESUMO
------
[verse]
'git imap-send' [-v] [-q] [--[no-]curl]


DESCRIÇÃO
---------
This command uploads a mailbox generated with 'git format-patch' into an IMAP drafts folder. This allows patches to be sent as other email is when using mail clients that cannot read mailbox files directly. The command also works with any general mailbox in which emails have the fields "From", "Date", and "Subject" in that order.

A típica utilização é algo como:

git format-patch --signoff --stdout --attach origin | git imap-send


OPÇÕES
------

-v::
--verbose::
	Seja loquaz.

-q::
--quiet::
	Fique em silêncio.

--curl::
	Use libcurl to communicate with the IMAP server, unless tunneling into it. Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND option set.

--no-curl::
	Talk to the IMAP server using git's own IMAP routines instead of using libcurl. Ignored if Git was built with the NO_OPENSSL option set.


CONFIGURAÇÃO
------------

Para utilizar a ferramenta, o `imap.folder` e o `imap.tunnel` ou o `imap.host` devem ser configurados com os valores apropriados.

include::includes/cmd-config-section-rest.txt[]

include::config/imap.txt[]

EXEMPLOS
--------
Utilizando um modo de tunelamento:

..........................
[imap]
    folder = "INBOX.Drafts"
    tunnel = "ssh -q -C user@example.com /usr/bin/imapd ./Maildir 2> /dev/null"
..........................

Utilizando o modo direto:

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imap://imap.example.com
    user = bob
    pass = p4ssw0rd
.........................

Usando o modo direto com SSL:

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imaps://imap.example.com
    user = bob
    pass = p4ssw0rd
    port = 123
    ; sslVerify = false
.........................


[NOTE]
Você pode querer utilizar `sslVerify=false` durante a resolução de problemas, caso suspeite que a fonte dos seu problemas de conexão é porque talvez haja um erro de verificação no certificado que você utiliza no servidor privado `example.com` que você está tentando configurar (ou já configurou).

Usando a interface IMAP do Gmail:

---------
[imap]
	folder = "[Gmail]/Drafts"
	host = imaps://imap.gmail.com
	user = user@gmail.com
	port = 993
---------

[NOTE]
Você pode precisar utilizar: `folder = "[Google Mail]/Drafts"` caso receba um erro indicando que a "O diretório não existe".

[NOTE]
Caso a sua conta do Gmail esteja definida para outro idioma que não o inglês, o nome da pasta "Drafts" será localizado para "Rascunhos".

Quando os commits estiverem prontos para serem enviados, execute o seguinte comando:

  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send

Apenas certifique-se de desabilitar a quebra de linha no cliente de email (a interface da Web do Gmail sempre irá quebrar as linhas independentemente de qualquer coisa, portanto, você precisará utilizar um cliente IMAP de verdade).

CUIDADO
-------
It is still your responsibility to make sure that the email message sent by your email program meets the standards of your project. Many projects do not like patches to be attached. Some mail agents will transform patches (e.g. wrap lines, send them as format=flowed) in ways that make them fail. You will get angry flames ridiculing you if you don't check this.

Thunderbird in particular is known to be problematic.  Thunderbird
users may wish to visit this web page for more information:
  https://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email

VEJA TAMBÉM
-----------
linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)

GIT
---
Parte do conjunto linkgit:git[1]
