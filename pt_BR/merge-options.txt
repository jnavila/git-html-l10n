--commit::
--no-commit::
	Execute a mesclagem e faça o commit com o resultado. Esta opção pode ser usada para substituir a opção `--no-commit`.
ifdef::git-pull[]
	Útil apenas quando for mesclar.
endif::git-pull[]
+
Com a opção `--no-commit`, executa a mesclagem e para imediatamente antes de criar a mesclagem de um commit, para dar ao usuário a chance de inspecionar e ajustar ainda mais o resultado da mesclagem antes de fazer o commit.
+
Observe que as atualizações de avanço rápido não criam a mesclagem de um commit e, portanto, não há como interromper estas mesclagens com a opção `--no-commit`. Portanto, se você quiser garantir que o seu ramo não seja alterado ou atualizado pelo comando de mesclagem, use a opção `--no-ff` com `--no-commit`.

--edit::
-e::
--no-edit::
	Chame um editor antes de fazer a mesclagem mecânica de um commit bem sucedido para editar ainda mais a mensagem da mesclagem que foi gerada automaticamente, para que o usuário possa explicar e justificar a mesclagem. A opção `--no-edit` pode ser utilizada para aceitar a mensagem que foi gerada automaticamente (em geral isso é desencorajado).
ifndef::git-pull[]
A opção `--edit` (ou `-e`) ainda é útil caso esteja enviando uma mensagem de rascunho com a opção `-m` na linha de comando e queira editá-la no editor.
endif::git-pull[]
+
Os scripts mais antigos podem depender do comportamento histórico de não permitir que o usuário edite a mensagem do registro log da mesclagem. Eles verão um editor aberto quando executar o `git merge`. Para facilitar o ajuste destes scripts para o comportamento que foi atualizado, a variável de ambiente `GIT_MERGE_AUTOEDIT` pode ser definido como `no` no início deles.

--cleanup=<modo>::
	Esta opção determina como a mensagem da mesclagem será limpa antes da confirmação. Para mais detalhes consulte linkgit:git-commit[1]. Além disso, caso o valor de `scissors` seja dado ao '<mode>' , o `scissors` (tesouras) será anexada ao `MERGE_MSG` antes de ser repassada para o mecanismo de commit caso exista mesclagens conflitantes.

ifdef::git-merge[]
--ff::
--no-ff::
--ff-only::
	Especifica como uma mesclagem é tratada quando o histórico mesclado já for um descendente do histórico atual. A opção `--ff` é o padrão, a menos que uma etiqueta anotada esteja mesclanda (e possivelmente assinada) e que não esteja armazenada em seu lugar natural na hierarquia `refs/tags/`, caso onde se assume que a opção `--no-ff` tenha sido usada.
endif::git-merge[]
ifdef::git-pull[]
--ff-only::
	Apenas atualize para o novo histórico se não houver um histórico divergente local. Esta é a predefinição quando nenhum método de reconciliação dos históricos divergentes for fornecido (através das opções `--rebase=*`).

--ff::
--no-ff::
	Ao fazer a mesclagem em vez do rebase, especifica como uma mesclagem é tratada quando o histórico que foi mesclado já for um descendente do histórico atual. Se a mesclagem for solicitada, a opção `--ff` é o padrão, a menos que a uma etiqueta mesclada esteja anotada (e possivelmente assinada) e que não esteja armazenada em seu lugar natural na hierarquia `refs/tags/`, caso onde se assume que a opção `--no-ff` tenha sido usada.
endif::git-pull[]
+
Com a opção `--ff`, quando for possível, resolve a mesclagem como um avanço rápido (atualize apenas o ponteiro do ramo para corresponder ao ramo mesclado; e não cria a mesclagem de um commit). Quando não for possível (quando o histórico mesclado não for um descendente do histórico atual), cria a mesclagem de um commit.
+
Com `--no-ff`, crie um commit da mesclagem em todos os casos, mesmo quando a mesclagem puder ser resolvida como um avanço rápido.
ifdef::git-merge[]
+
Com a opção `--ff-only`, resolva a mesclagem como um avanço rápido quando for possível. Quando não for possível, recuse a mesclagem e encerre com uma condição de encerramento diferente de zero.
endif::git-merge[]

-S[<keyid>]::
--gpg-sign[=<keyid>]::
--no-gpg-sign::
	Assine a mesclagem resultante do commit com o GPG. O argumento `keyid` é opcional e a predefinição retorna para a identidade de quem fez o commit; se utilizado, deve estar anexado a opção sem espaço. A opção `--no-gpg-sign` é útil para revogar a variável de configuração `commit.gpgSign` e a anterior `--gpg-sign`.

--log[=<n>]::
--no-log::
	Além dos nomes dos ramos, preencha a mensagem do registro log com descrições de uma linha com no máximo <n> commits atuais que estão sendo mesclados. Consulte também linkgit:git-fmt-merge-msg[1].
ifdef::git-pull[]
	Útil apenas quando for mesclar.
endif::git-pull[]
+
Com '--no-log', não liste as descrições de uma linha vindas do commits que estão atualmente sendo mescladas.

include::signoff-option.txt[]

--stat::
-n::
--no-stat::
	Exiba um "diffstat" no final da mesclagem. O 'diffstat' também é controlado pela opção da configuração merge.stat.
+
Com `-n` ou `--no-stat`, não mostre o 'diffstat' no final da mesclagem.

--squash::
--no-squash::
	Produz a árvore de trabalho e condição do índice como se uma mesclagem real tivesse acontecido (exceto pelas informações da mesclagem), mas não faz um commit, move o `HEAD` ou registra o `$GIT_DIR/MERGE_HEAD` (para fazer com que o próximo comando `git commit` crie a mesclagem de um commit). Isso permite que você crie um único commit sobre o ramo atual, cujo efeito é o mesmo que mesclar um outro ramo (ou mais, no caso de um "octopus").
+
Com a opção `--no-squash`, execute a mesclagem e faça o commit com o resultado. Esta opção pode ser usada para substituir a opção `--squash`.
+
Com a opção `--squash`, a opção `--commit` não é permitida e irá falhar.
ifdef::git-pull[]
+
Útil apenas quando for mesclar.
endif::git-pull[]

--[no-]verify::
	É predefinido que os ganchos 'pre-merge' e 'commit-msg' sejam executados. Quando a opção `--no-verify` é usada, isso é ignorado. Consulte também linkgit:githooks[5].
ifdef::git-pull[]
	Útil apenas quando for mesclar.
endif::git-pull[]

-s <estratégia>::
--strategy=<estratégia>::
	Use a estratégia fornecida de mesclagem; mais de uma pode ser fornecida mais de uma vez para especificá-las na ordem em que devem ser testadas. Se não houver a opção `-s`, uma lista integrada de estratégias será usada em seu lugar (`ort` ao mesclar um único `HEAD`, caso contrário, `octopus`).

-X <opção>::
--strategy-option=<opção>::
	Passe a opção específica da estratégia através da estratégia de mesclagem.

--verify-signatures::
--no-verify-signatures::
	Verifique se o commit do cume do ramo lateral que está sendo mesclado está assinado com uma chave válida, ou seja, uma chave que tenha uma UID válida: no modelo de confiança predefinido, isso significa que a chave da assinatura foi assinada por uma chave confiável. Se o commit do cume do ramo secundário não for assinado com uma chave válida, a mesclagem será abortada.
ifdef::git-pull[]
+
Útil apenas quando for mesclar.
endif::git-pull[]

--summary::
--no-summary::
	É um sinônimos para `--stat` e `--no-stat`; estas opções foram descontinuadas e serão removidas no futuro.

ifndef::git-pull[]
-q::
--quiet::
	Opere em silêncio. Implica no uso da opção `--no-progress`.

-v::
--verbose::
	Seja loquaz.

--progress::
--no-progress::
	Ativar/desativar explicitamente o progresso. Se nenhum dos dois for usado, o progresso será mostrado se o erro predefinido estiver conectado a um terminal. Observe que nem todas as estratégias de mesclagem podem ser compatíveis com os relatórios de progresso.

endif::git-pull[]

--autostash::
--no-autostash::
	Crie automaticamente uma entrada temporária de armazenamento antes do início da operação, registre-a na 'ref' `MERGE_AUTOSTASH` e aplique-a ao concluir a operação. Isso significa que você pode executar a operação numa árvore de trabalho suja. No entanto, use-o com cuidado: o aplicativo de armazenamento final após uma mesclagem bem-sucedida pode resultar em conflitos não triviais.

--allow-unrelated-histories::
	É predefinido que o comando `git merge` se recuse a mesclar os históricos que não compartilham de um ancestral comum. Esta opção pode ser usada para substituir este tipo de segurança ao mesclar os históricos de dois projetos que começaram suas vidas de forma independente. Como essa é uma ocasião muito rara, não existe nenhuma variável de configuração para ativar isso por padrão e ela também não será adicionada.
ifdef::git-pull[]
+
Útil apenas quando for mesclar.
endif::git-pull[]
