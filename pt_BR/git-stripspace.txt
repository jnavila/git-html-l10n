git-stripspace(1)
=================

NOME
----
git-stripspace - Remove os espaços desnecessários


RESUMO
------
[verse]
'git stripspace' [-s | --strip-comments]
'git stripspace' [-c | --comment-lines]

DESCRIÇÃO
---------

Leia o texto, como mensagens de commit, notas, tags e suas respectivas descrições das ramificações, da entrada padrão e limpe-o da maneira utilizada pelo Git.

Sem argumentos, isso irá:

- remover os espaços do final de todas as linhas
- recolher as várias linhas vazias consecutivas em apenas uma linha vazia
- remover as linhas vazias do início e do fim da entrada
- adiciona um '\n' ausente à última linha se for necessário.

No caso em que a entrada consiste inteiramente em caracteres de espaço, nenhuma saída será produzida.

* NOTA *: Destina-se à limpeza de metadados, prefira o modo `--whitespace=fix`
do linkgit:git-apply[1] para corrigir os espaços dos patches ou os
arquivos no repositório.

OPÇÕES
------
-s::
--strip-comments::
	Ignora e remove todas as linhas que começam com o caractere predefinido de comentário ('#').

-c::
--comment-lines::
	Coloque um caractere de comentário previamente com espaço em cada linha. As linhas serão automaticamente terminadas com uma nova linha. Nas linhas vazias, apenas o caractere de comentário será anexado.

EXEMPLOS
--------

Dada a seguinte entrada barulhenta com sinal '$' indicando o final de uma linha:

---------
|Uma breve introdução ao   $
|   $
|$
|Um novo parágrafo$
|# com uma linha de comentário    $
|explicando um monte de coisas.$
|$
|# Mais um parágrafo antigo comentado. $ |      $
|O fim.$
|  $

---------

Utilize 'git stripspace' sem argumentos para obter:

---------
|Uma breve introdução$
|$
|Um novo parágrafo$
|# com uma linha de comentário$
|explicando um monte de coisa.$
|$
|# Um parágrafo antigo comentado.$
|$
|O fim.$
---------

Utilize `git stripspace --strip-comments` para obter:

---------
|Uma breve introdução$
|$
|Um novo parágrafo$
|explicando um monte de coisa.$
|$
|O fim.$
---------

GIT
---
Parte do conjunto linkgit:git[1]
