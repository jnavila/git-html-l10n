git-upload-archive(1)
=====================

NOME
----
git-upload-archive - Envia um arquivo de volta para o git-archive


RESUMO
------
[verse]
'git upload-archive' <repositório>

DESCRIÇÃO
---------
Chamado através do comando `git archive --remote` e envia um arquivo gerado para a outra extremidade através do protocolo Git.

Este comando geralmente não é invocado diretamente pelo usuário final. The UI for the protocol is on the 'git archive' side, and the program pair is meant to be used to get an archive from a remote repository.

SEGURANÇA
---------

Para proteger a privacidade dos objetos que foram removidos do histórico, mas que ainda não foram removidos, o comando `git-upload-archive` evita servir os arquivos para os commits e as árvores que não são acessíveis a partir das referências do repositório. No entanto, como calcular a acessibilidade de objetos é computacionalmente dispendioso, o comando `git-upload-archive` implementa um conjunto de regras mais rígidas, porém mais fácil de verificar:

  1. Os clientes podem solicitar um commit ou uma árvore que aponte diretamente por uma referência. `git archive --remote=origin v1.0` por exemplo.

  2. Os clientes podem solicitar uma subárvore dentro de um commit ou uma árvore utilizando a sintaxe `ref:path`. Como por exemplo, `git archive --remote=origin v1.0:Documentation`.

  3. Os clientes não podem utilizar outras expressões SHA-1, mesmo que o resultado final seja acessível. Por exemplo, nem um commit que tenha relação com `master^` nem um sha1 literal como `abcd1234` são permitidos, mesmo que o resultado seja acessível através das referências.

Observe que a regra 3 não permitem muitos casos onde não tenham implicações de privacidade. Essas regras estão sujeitas a alterações nas versões futuras do git, e o servidor acessado pelo `git archive --remote` pode ou não seguir exatamente estas regras.

Caso a opção de configuração `uploadArchive.allowUnreachable` seja verdadeira, estas regras serão ignoradas e os clientes poderão utilizar expressões SHA-1 de forma arbitrária. É útil caso você não se importe com a privacidade dos objetos inacessíveis ou se o banco de dados dos objetos já esteja disponível publicamente para acesso através do http não inteligente.

OPÇÕES
------
<repositório>::
	O repositório para onde obter um arquivo tar.

GIT
---
Parte do conjunto linkgit:git[1]
