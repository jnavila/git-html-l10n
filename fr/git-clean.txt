git-clean(1)
============

NOM
---
git-clean - Supprime les fichiers non suivis de l'arbre de travail

SYNOPSIS
--------
[verse]
'git clean' [-d] [-f] [-i] [-n] [-q] [-e <motif>] [-x | -X] [--] <spéc-chemin>...

DESCRIPTION
-----------

Nettoie l'arbre de travail en supprimant récursivement les fichiers qui ne sont pas sous contrôle de version, en commençant par le répertoire courant.

Normalement, seuls les fichiers inconnus de Git sont supprimés, mais si l'option `-x` est spécifiée, les fichiers ignorés sont également supprimés. Cela peut, par exemple, être utile pour supprimer tous les produits de construction.

Si des arguments optionnels `<spéc-chemin>...` sont donnés, seuls ces chemins qui correspondent au spéc-chemin sont affectés.

OPTIONS
-------
-d::
	Normalement, lorsque aucun <spéc-chemin> n'est spécifié, git clean ne fera pas de récursion dans les répertoires non suivis pour éviter de supprimer trop de choses. Spécifiez -d pour qu'il fasse une récursion dans de tels répertoires également. Si un <spéc-chemin> est spécifié, -d n'est pas pertinent ; tous les fichiers non suivis correspondant aux chemins spécifiés (avec des exceptions pour les répertoires git imbriqués mentionnés sous `--force`) seront supprimés.

-f::
--force::
	Si la variable de configuration de Git clean.requireForce n'est pas définie à false, 'git clean' refusera de supprimer des fichiers ou des répertoires à moins qu'on lui fournisse -f ou -i. Git refusera de modifier les dépôts git imbriqués non suivis (répertoires avec un sous-répertoire .git) à moins qu'un second -f soit fourni.

-i::
--interactive::
	Montrer ce qui serait fait et nettoyer les fichiers de manière interactive. Voir "Mode interactif" pour plus de détails.

-n::
--dry-run::
	Ne rien supprimer effectivement, montrer juste ce qui serait fait.

-q::
--quiet::
	Mode silencieux, ne signaler que les erreurs, mais pas les fichiers qui ont été supprimés avec succès.

-e <motif>::
--exclude=<motif>::
	Utiliser le motif d'exclusion donné en plus des règles d'ignorance standard (voir linkgit:gitignore[5]).

-x::
	Ne pas utiliser les règles d'ignorance standard (voir linkgit:gitignore[5]), mais utiliser quand même les règles d'ignorance données avec les options `-e` de la ligne de commande. Cela permet de supprimer tous les fichiers non suivis, y compris les produits de construction. Ceci peut être utilisé (éventuellement en conjonction avec 'git restore' ou 'git reset') pour créer un répertoire de travail vierge pour tester une construction propre.

-X::
	Supprimer uniquement les fichiers ignorés par Git. Cela peut être utile pour tout reconstruire à partir de zéro, mais conserver les fichiers créés manuellement.

Mode interactif
---------------
Quand la commande entre en mode interactif, elle affiche les fichiers et répertoires à supprimer, puis entre en boucle de commande interactive.

La boucle de commande affiche la liste des sous-commandes disponibles et affiche le prompt « What now> » (Que faire maintenant). En général, lorsque le prompt se termine par un '>' unique, vous ne pouvez choisir qu'une seule des propositions et appuyer Entrée, comme cela :

------------
    *** Commands ***
	1: clean                2: filter by pattern    3: select by numbers
	4: ask each             5: quit                 6: help
    What now> 1
------------

Vous pouvez indiquer `c` ou `clean` ci-dessus, à condition que le choix soit unique.

La boucle de commande principale propose 6 sous-commandes.

clean::

   Commencer à nettoyer les fichiers et les répertoires, puis quitter.

filtrer par motif::

   Cette commande affiche les fichiers et répertoires à supprimer et émet une invite "Input ignore patterns>>". Vous pouvez saisir des motifs séparés par des espaces pour exclure les fichiers et les répertoires de la suppression. Par exemple, "*.c *.h" exclura de la suppression les fichiers se terminant par ".c" et ".h". Lorsque vous êtes satisfait du résultat filtré, appuyez sur ENTER (vide) pour revenir au menu principal.

sélectionner par numéros::

   Affiche les fichiers et les répertoires à supprimer et un prompt "Slect items to delete>>". Quand le prompt se termine par un double '>', comme ceci, vous pouvez sélectionner plus d'une option, concaténées avec des espaces ou des virgules. Vous pouvez aussi indiquer des intervalles. Par exemple "2-5 7,9" pour choisir 2, 3, 4, 5, 7 et 9 dans la liste. Si le second nombre d'un intervalle est absent, tous les items restants sont sélectionnés. Par ex. "7-" choisit 7, 8 et 9 dans la liste. Vous pouvez indiquer '*' pour tout sélectionner. Enfin, quand le resultat filtré est satisfaisant, pressez ENTRÉE (vide) pour retourner au menu principal.

demander pour chacun::

  Cela va commencer à nettoyer, et vous devez confirmer un par un afin de supprimer les éléments. Veuillez noter que cette action n'est pas aussi efficace que les deux actions précédentes.

quitter::

  Cela vous permet d'arrêter sans faire le ménage.

aide::

  Afficher une brève utilisation de git-clean interactif.

CONFIGURATION
-------------

include::includes/cmd-config-section-all.txt[]

include::config/clean.txt[]

VOIR AUSSI
----------
linkgit:gitignore[5]

GIT
---
Fait partie de la suite linkgit:git[1]

TRADUCTION
----------
Cette  page de manuel a été traduite par Jean-Noël Avila <jn.avila AT free DOT fr> et les membres du projet git-manpages-l10n. Veuillez signaler toute erreur de traduction par un rapport de bogue sur le site https://github.com/jnavila/git-manpages-l10n .
