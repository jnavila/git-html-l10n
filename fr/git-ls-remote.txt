git-ls-remote(1)
================

NOM
---
git-ls-remote - Liste les références dans un dépôt distant


SYNOPSIS
--------
[verse]
'git ls-remote' [--heads] [--tags] [--refs] [--upload-pack=<exec>]
                     [-q | --quiet] [--exit-code] [--get-url] [--sort=<clé>}
                     [--symref] [<dépôt> [<motif>...]]

DESCRIPTION
-----------
Affiche les références disponibles dans un dépôt distant ainsi que les identifiants de validation associés.


OPTIONS
-------
-h::
--heads::
-t::
--tags::
	Limiter à refs/heads et refs/tags, respectivement. Ces options ne s'excluent pas mutuellement ; si les deux sont données, les références stockées dans refs/heads et refs/tags sont affichées. Notez que `git ls-remote -h` utilisé sans rien d'autre sur la ligne de commande donne de l'aide, comme les autres sous-commandes de git.

--refs::
	Ne pas afficher les étiquettes pelées ou les pseudorefs comme `HEAD` dans la sortie.

-q::
--quiet::
	Ne pas afficher l'URL distante sur stderr.

--upload-pack=<exec>::
	Spécifier le chemin complet de 'git-upload-pack' sur l'hôte distant. Cela permet de lister des références provenant de dépôts accessibles via SSH et pour lesquels le démon SSH n'utilise pas le PATH configuré par l'utilisateur.

--exit-code::
	Sortir avec l'état "2" lorsqu'aucune référence correspondante n'est trouvée dans le dépôt distant. En général, la commande sort avec le statut "0" pour indiquer qu'elle a réussi à dialoguer avec le dépôt distant, qu'elle ait trouvé ou non des références correspondantes.

--get-url::
	Développer l'URL du dépôt distant donné en prenant en compte tout paramètre de configuration "url.<base>.insteadOf" (Voir linkgit:git-config[1]) et quitte sans parler au dépôt distant.

--symref::
	En plus de l'objet pointé par lui, afficher la réf sous-jacente pointée par lui lors de l'affichage d'une réf symbolique. Actuellement, upload-pack n'affiche que la symref HEAD, qui sera donc la seule affichée par ls-remote.

--sort=<clé>::
	Trier sur la base de la clé donnée. Préfixe `-` pour trier par ordre décroissant de la valeur. Supporte "version:refname" ou "v:refname" (les noms de balises sont traités comme des versions). L'ordre de tri "version:refname" peut également être affecté par la variable de configuration "versionsort.suffix". Voir linkgit:git-for-each-ref[1] pour plus d'options de tri, mais soyez conscient que des clés comme `committerdate` qui requièrent l'accès aux objets eux-mêmes ne fonctionneront pas pour les refs dont les objets n'ont pas encore été récupérés du distant, et donneront une erreur `missing object` (objet manquant).

-o <option>::
--server-option=<option>::
	Transmettre la chaîne donnée au serveur lors d'une communication utilisant la version 2 du protocole. La chaîne donnée ne doit pas contenir de caractère NUL ou LF. Lorsque plusieurs `---server-option=<option>' sont donnés, ils sont tous envoyés à l'autre côté dans l'ordre indiqué sur la ligne de commande.

<dépôt>::
	Le dépôt "distant" à interroger. Ce paramètre peut être une URL ou le nom d'un dépôt distant (voir les sections GIT URLS et REMOTES de linkgit:git-fetch[1]).

<motif>...::
	Si elle n'est pas spécifiée, toutes les références, après le filtrage effectué avec --heads et --tags, sont affichées. Lorsque <motif>... est spécifié, seules les références correspondant à un ou plusieurs des motifs donnés sont affichées. Chaque motif est interprété comme un glob (voir `glob` dans linkgit:gitglossary[7]) qui est comparé à la "queue" d'une référence, en commençant soit par le début de la référence (ainsi un nom complet comme `refs/heads/foo` correspond), soit par un séparateur (ainsi `bar` correspond à `refs/heads/bar` mais pas à `refs/heads/foobar`).

SORTIE
------

La sortie est dans le format :

------------
<oid> TAB <réf> LF
------------

Lors de l'affichage d'une étiquette annotée, à moins qu'il n'y ait`--refs` , deux lignes de ce type sont affichées : l'une avec le nom de référence pour l'étiquette elle-même comme `<réf>`, et l'autre avec `<réf>' suivi de `^{}`. Le `<oid>` sur la dernière ligne montre le nom de l'objet que l'étiquette pointe.

EXEMPLES
--------

* Lister toutes les références (y compris les symboles et les pseudo-réfs), en pelant les étiquettes :
+
----
$ git ls-remote
27d43aaaf50ef0ae014b88bba294f93658016a2e	HEAD
950264636c68591989456e3ba0a5442f93152c1a	refs/heads/main
d9ab777d41f92a8c1684c91cfb02053d7dd1046b	refs/heads/next
d4ca2e3147b409459955613c152220f4db848ee1	refs/tags/v2.40.0
73876f4861cd3d187a4682290ab75c9dccadbc56	refs/tags/v2.40.0^{}
----

* Lister toutes les références correspondant aux motifs donnés :
+
----
$ git ls-remote http://www.kernel.org/pub/scm/git/git.git master seen rc
5fe978a5381f1fbad26a80e682ddd2a401966740	refs/heads/master
c781a84b5204fb294c9ccc79f8b3baceeb32c061	refs/heads/seen
----

* Lister seulement les étiquettes correspondant à un motif à joker donné :
+
----
$ git ls-remote --tags http://www.kernel.org/pub/scm/git/git.git v\*
485a869c64a68cc5795dd99689797c5900f4716d	refs/tags/v2.39.2
cbf04937d5b9fcf0a76c28f69e6294e9e3ecd7e6	refs/tags/v2.39.2^{}
d4ca2e3147b409459955613c152220f4db848ee1	refs/tags/v2.40.0
73876f4861cd3d187a4682290ab75c9dccadbc56	refs/tags/v2.40.0^{}
----

VOIR AUSSI
----------
linkgit:git-check-ref-format[1].

GIT
---
Fait partie de la suite linkgit:git[1]

TRADUCTION
----------
Cette  page de manuel a été traduite par Jean-Noël Avila <jn.avila AT free DOT fr> et les membres du projet git-manpages-l10n. Veuillez signaler toute erreur de traduction par un rapport de bogue sur le site https://github.com/jnavila/git-manpages-l10n .
