FORMATS DE DATE
---------------

Les variables d'environnement `GIT_AUTHOR_DATE` et `GIT_COMMITTER_DATE` supportent les formats de date suivants :

Format interne de Git::
	Il est de la forme `<horodatage unix> <décalage de fuseau horaire>`, où `<horodatage unix>` est un nombre de secondes depuis l'époque UNIX. `<décalage de fuseau horaire>` est un décalage positif ou négative par rapport à UTC. Par exemple, CET (qui est en avance d'une heure sur UTC) est `+0100`.

RFC 2822::
	Le standard de format des courriel tel que décrit par la RFC 2822, par exemple `Thu, 07 Apr 2005 22:13:13 +0200`.

ISO 8601::
	Les heures et les dates sont spécifiées par le standard ISO 8601, par exemple `2005-04-07T22:13:13`. L'analyseur accepte aussi un espace au lieu du caractère `T`. Les parties fractionnelles d'une seconde seront ignorées, par exemple, `2005-04-07T22:13:13.019` sera considéré comme étant `2005-04-07T22:13:13`.
+
NOTE: De plus, la partie date est acceptée dans les formats suivants : `AAAA.MM.JJ`, `MM/JJ/AAAA` et `JJ.MM.AAAA`.

ifdef::git-commit[]
En plus de reconnaître tous les formats de date ci-dessus, l'option `--date` essaiera également de donner un sens à d'autres formats de date plus humainement compréhensibles, tels que les dates relatives comme "yesterday" ou "last Friday at noon".
endif::git-commit[]
