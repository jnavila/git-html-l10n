git-mv(1)
=========

NOM
---
git-mv - Déplace ou renomme un fichier, un répertoire, ou un lien symbolique


SYNOPSIS
--------
[verse]
'git mv' [<options>] <source>... <destination>

DESCRIPTION
-----------
Déplace ou renomme un fichier, un répertoire ou un symlink.

 git mv [-v] [-f] [-n] [-k] <source> <destination>
 git mv [-v] [-f] [-n] [-k] <source> ... <répertoire destination>

Dans la première forme, cela renomme <source>, qui doit exister et être soit un fichier, un lien symbolique ou un répertoire, en <destination>. Dans la deuxième forme, le dernier argument doit être un répertoire existant ; les sources données seront déplacées dans ce répertoire.

L'index est mis à jour une fois l'opération terminée, mais la modification doit toujours être validée.

OPTIONS
-------
-f::
--force::
	Force le renommage ou le déplacement d'un fichier même si la <destination> existe.
-k::
	Sauter les actions de déplacement ou de renommage qui conduiraient à une condition d'erreur. Une erreur se produit lorsqu'une source n'est ni existante ni contrôlée par Git, ou lorsqu'elle écrase un fichier existant sauf si `-f' est donné.
-n::
--dry-run::
	Ne rien faire ; seulement montrer ce qui se passerait

-v::
--verbose::
	Afficher les noms des fichiers au fur à mesure de leur déplacement.

SOUS-MODULES
------------
Déplacer un sous-module utilisant un fichier git (ce qui signifie qu'il a été cloné avec une version de Git 1.7.8 ou plus récente) mettra à jour le gitfile et le paramètre core.worktree pour que le sous-module fonctionne dans le nouvel emplacement. Il tentera également de mettre à jour le paramètre submodule.<nom>.path dans le fichier linkgit:gitmodules[5] et d'indexer ce fichier (sauf si -n est utilisé).

BOGUES
------
Chaque fois qu'une mise à jour d'un superprojet déplace un sous-module peuplé (par exemple lors du basculement d'un commit à l'autre avant et après le déplacement), une extraction de sous-module périmée reste dans l'ancien emplacement et un répertoire vide apparaît dans le nouvel emplacement. Pour remplir à nouveau le sous-module dans le nouvel emplacement, l'utilisateur devra ensuite exécuter "git submodule update". Supprimer l'ancien répertoire n'est sûr que lorsqu'il utilise un fichier gitfile, sinon l'historique du sous-module sera également supprimé. Ces deux étapes seront obsolètes lorsque la mise à jour récursive de sous-module aura été implémentée.

GIT
---
Fait partie de la suite linkgit:git[1]

TRADUCTION
----------
Cette  page de manuel a été traduite par Jean-Noël Avila <jn.avila AT free DOT fr> et les membres du projet git-manpages-l10n. Veuillez signaler toute erreur de traduction par un rapport de bogue sur le site https://github.com/jnavila/git-manpages-l10n .
