git-cvsexportcommit(1)
======================

NOM
---
git-cvsexportcommit - Exporter un seul commit vers une extraction CVS


SYNOPSIS
--------
[verse]
git cvsexportcommit' [-h] [-u] [-v] [-c] [-P] [-p] [-a] [-d cvsroot]
	[-w cvsworkdir] [-W] [-f] [-m <préfixe-msg>] [<commit-parent>] <id-commit>


DESCRIPTION
-----------
Exporte un commit de Git vers une extraction CVS, ce qui facilite la fusion des rustines d'un dépôt Git vers un dépôt CVS.

Spécifier le nom d'une extraction CVS en utilisant le commutateur -w ou l'exécuter depuis la racine de la copie de travail CVS. Dans ce dernier cas, GIT_DIR doit être défini. Voir les exemples ci-dessous.

Il fait de son mieux pour faire ce qui est le plus sûr, il vérifiera que les fichiers sont inchangés et à jour dans le checkout CVS, et il ne fera pas d'autocommit par défaut.

Prend en charge les ajouts, les suppressions et les modifications de fichiers qui affectent les fichiers binaires.

Si le commit est un commit de fusion, vous devez dire à 'git cvsexportcommit' contre quel parent le changeset doit être fait.

OPTIONS
-------

-c::
	La validation est automatique si la rustine s'est appliquée proprement. Il ne sera pas validé si des sections n'ont pas été appliquées ou s'il y a eu d'autres problèmes.

-p::
	Mode pédant (paranoïaque) lors de l’application de rustines. Appelle `patch` avec --fuzz=0

-a::
	Ajouter des informations sur l'auteur. Ajoute la ligne Auteur, et Validateur (si différent de l'auteur) au message.

-d::
	Définir un CVSROOT alternatif à utiliser. Ceci correspond au paramètre CVS -d. En général, les utilisateurs ne souhaitent pas définir ce paramètre, sauf s'ils utilisent CVS de manière asymétrique.

-f::
	Force la fusion même si les fichiers ne sont pas à jour.

-P::
	Forcer le commit parent , même s’il ne s’agit pas d’un parent direct.

-m::
	Préfixe le message de validation avec le préfixe fourni. Utile pour les séries de patchs et autres.

-u::
	Mettre à jour les fichiers affectés du dépôt CVS avant de tenter l'exportation.

-k::
	Inverser l'expansion des mots-clés CVS (par exemple, $Revision : 1.2.3.4$ devient $Revision$) dans l'extraction CVS de travail avant d'appliquer la rustine.

-w::
	Spécifier l'emplacement de l'extraction CVS à utiliser pour l'exportation. Cette option ne nécessite pas que GIT_DIR soit défini avant l'exécution si le répertoire actuel se trouve dans un dépôt Git. La valeur par défaut est celle de 'cvsexportcommit.cvsdir'.

-W::
	Indiquer à cvsexportcommit que le répertoire de travail actuel n'est pas seulement une extraction Git, mais aussi une extraction CVS. Par conséquent, Git réinitialisera le répertoire de travail au commit parent avant de poursuivre.

-v::
	Verbeux.

CONFIGURATION
-------------
cvsexportcommit.cvsdir::
	L'emplacement par défaut de l'extraction CVS à utiliser pour l'exportation.

EXEMPLES
--------

Fusionner une rustine dans le CVS::
+
------------
$ export GIT_DIR=~/project/.git
$ cd ~/project_cvs_checkout
$ git cvsexportcommit -v <sha1-commit>
$ cvs commit -F .msg <fichiers>
------------

Fusionner une rustine dans CVS (options -c et -w). Le répertoire de travail se trouve dans le dépôt Git::
+
------------
	$ git cvsexportcommit -v -c -w ~/projet_cvs_extrait <sha1-commit>
------------

Fusionner automatiquement les rustines en attente dans CVS - seulement si vous savez vraiment ce que vous faites::
+
------------
$ export GIT_DIR=~/projet/.git
$ cd ~/projet_cvs_extrait
$ git cherry cvshead mahead | sed -n 's/^+ //p' | xargs -l1 git cvsexportcommit -c -p -v
------------

GIT
---
Fait partie de la suite linkgit:git[1]

TRADUCTION
----------
Cette  page de manuel a été traduite par Jean-Noël Avila <jn.avila AT free DOT fr> et les membres du projet git-manpages-l10n. Veuillez signaler toute erreur de traduction par un rapport de bogue sur le site https://github.com/jnavila/git-manpages-l10n .
