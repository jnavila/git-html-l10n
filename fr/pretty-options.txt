--pretty[=<format>]::
--format=<format>::

	Formater le contenu des journaux de commits dans un format donné, où
	'<format>' peut être au choix parmi 'oneline', 'short', 'medium', 'full',
	'fuller', 'reference', 'email', 'raw', 'format:<chaîne>' et
	'tformat:<chaîne>'.  Lorsque '<format>' n'est rien de ce qui précède, et
	qu'il contient'%format', il agit comme si '--pretty=tformat:<format>' était
	donné.
+
Voir la section "MISE EN FORME" pour plus de détails pour chaque format.
Lorsque la partie'=<format>' est omise, la valeur par défaut est'medium'.
+
Note : vous pouvez spécifier le format par défaut dans la configuration du
dépôt `commit.cleanup` (voir linkgit:git-config[1]).

--abbrev-commit::
	Au lieu d'afficher le nom complet hexadécimal de 40 octets de l'objet
	commit, afficher seulement un préfixe partiel.  Le nombre de chiffres peut
	être spécifié avec "--abbrev=<n>". (qui modifie également la sortie diff, si
	elle est affichée).
+
Cela devrait rendre "--pretty=online" beaucoup plus lisible pour les
personnes utilisant des terminaux à 80 colonnes.

--no-abbrev-commit::
	Afficher le nom complet hexadécimal de 40 octets de l'objet commit. Ceci
	annule `--abbrev-commit` et les options qui l'impliquent telles que
	"--online". Elle remplace également la variable `log.abbrevCommit`.

--oneline::
	C'est un raccourci pour "--pretty=online --abbrev-commit" utilisés ensemble.

--encoding=<codage>::
	Les objets commit enregistrent l'encodage utilisé pour le message de log
	dans leur en-tête d'encodage ; cette option peut être utilisée pour indiquer
	à la commande de recoder le message de log  du commit dans l'encodage
	préféré par l'utilisateur.  Pour les commandes hors plomberie, cette valeur
	par défaut est UTF-8. Notez que si un objet prétend être encodé en `X` et
	que nous sortons en `X`, nous allons sortir l'objet à l'identique ; cela
	signifie que les séquences invalides dans la livraison originale peuvent
	être copiées dans la sortie.

--expand-tabs=<n>::
--expand-tabs::
--no-expand-tabs::
	Effectuer une extension de tabulation (remplacer chaque tabulation par
	suffisamment d'espaces pour remplir jusqu'à la colonne d'affichage suivante
	qui est multiple de'<n>') dans le message de journal avant de l'afficher
	dans la sortie.  `--expand-tabs` est un raccourci  pour `--expand-tabs=8`,
	et `--no-expand-tabs` est un raccourci pour `--expand-tabs=0`, qui désactive
	l'extension des tabulations.
+
Par défaut, les tabulations sont développées par les formatages qui
indentent le message de log par 4 espaces (c'est-à-dire 'medium', qui est le
format par défaut, 'full', 'fuller').

ifndef::git-rev-list[]
--notes[=<ref>]::
	Afficher les notes (voir linkgit:git-notes[1]) qui annotent le commit, lors
	de l'affichage du message du journal de commit.  C'est la valeur par défaut
	pour les commandes `git log`, `git show` et `git whatchanged` lorsqu'il n'y
	a pas d'option `--pretty`, `--format` ou `--online` sur la ligne de
	commande.
+
Par défaut, les notes affichées proviennent des références de notes listées
dans les variables `core.notesRef` et `notes.displayRef` (ou les
substitutions d'environnement correspondantes). Voir linkgit:git-config[1]
pour plus de détails.
+
Avec un argument optionnel'<ref>', utiliser la référence pour trouver les
notes à afficher.  La référence peut spécifier le nom complet de référence
quand elle commence par `refs/notes/` ; quand elle commence par `notes/`,
`refs/` et sinon `refs/notes/` est préfixé pour former un nom complet de la
référence.
+
Plusieurs options --notes peuvent être combinées pour contrôler quelles
notes sont affichées. Exemples : "--notes=foo" affichera uniquement les
notes de "refs/notes/foo" ; "--notes=foo --notes" affichera les notes de
"refs/notes/foo" et des ref(s) de notes par défaut.

--no-notes::
	Ne pas afficher les notes. Ceci annule l'option `--notes` ci-dessus, en
	réinitialisant la liste des références de notes à partir desquelles les
	notes sont affichées.  Les options sont analysées dans l'ordre donné sur la
	ligne de commande, par exemple "--notes --notes --notes=foo --no-notes
	--notes=bar" n'affichera que les notes "refs/notes/bar".

--show-notes[=<reférence>]::
--[no-]standard-notes::
	Ces options sont obsolètes. Utilisez plutôt les options --notes/--no-notes
	ci-dessus.
endif::git-rev-list[]

--show-signature::
	Vérifier la validité d'un objet commit signé en passant la signature à `gpg
	--verify' et afficher le résultat.
