git-imap-send(1)
================

NOM
---
git-imap - Envoye un ensemble de rustines depuis stdin vers un répertoire IMAP


SYNOPSIS
--------
[verse]
'git imap-send' [-v] [-q] [--[no-]curl]


DESCRIPTION
-----------
Cette commande télécharge une boîte aux lettres générée avec 'git format-patch' dans un dossier de brouillons IMAP. Cela permet d'envoyer les correctifs comme d'autres courriels lorsque l'on utilise des clients de messagerie qui ne peuvent pas lire directement les fichiers de boîtes aux lettres. La commande fonctionne également avec n'importe quelle boîte aux lettres générale dans laquelle les courriels comportent les champs "From", "Date" et "Subject" dans cet ordre.

L'utilisation typique est quelque chose comme :

git format-patch --signoff --stdout --attach origin | git imap-send


OPTIONS
-------

-v::
--verbose::
	Mode bavard.

-q::
--quiet::
	Être silencieux.

--curl::
	Utiliser libcurl pour communiquer avec le serveur IMAP, à moins qu'il ne s'agisse d'un tunnel. Ignoré si Git a été compilé sans l'option USE_CURL_FOR_IMAP_SEND.

--no-curl::
	Communiquer avec le serveur IMAP en utilisant les propres routines IMAP de Git au lieu d'utiliser libcurl. Ignoré si Git a été compilé avec l'option NO_OPENSSL.


CONFIGURATION
-------------

Pour utiliser l'outil, `imap.folder` et `imap.tunnel` ou `imap.host` doivent être réglés sur les valeurs appropriées.

include::includes/cmd-config-section-rest.txt[]

include::config/imap.txt[]

EXEMPLES
--------
Utilisation du mode tunnel :

..........................
[imap]
    folder = "INBOX.Drafts"
    tunnel = "ssh -q -C utilisateur@exemple.com /usr/bin/imapd ./Maildir 2> /dev/null"
..........................

Utilisation du mode direct :

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imap://imap.exemple.com
    user = bob
    pass = p4ssw0rd
.........................

Utilisation du mode direct avec SSL :

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imaps://imap.exemple.com
    user = bob
    pass = p4ssw0rd
    port = 123
    ; sslVerify = false
.........................


[NOTE]
Vous pouvez utiliser `sslVerify=false` pendant le dépannage, si vous pensez que la raison pour laquelle vous avez des difficultés à vous connecter est que le certificat que vous utilisez sur le serveur privé `exemple.com` que vous essayez de mettre en place (ou que vous avez mis en place) peut ne pas être vérifié correctement.

Utilisation de l’interface IMAP de Gmail :

---------
[imap]
	folder = "[Gmail]/Drafts"
	host = imaps://imap.gmail.com
	user = user@gmail.com
	port = 993
---------

[NOTE]
Il se peut que vous deviez utiliser à la place : `folder = "[Google Mail]/Drafts"` si vous obtenez une erreur indiquant que le "Dossier n'existe pas".

[NOTE]
Si votre compte Gmail est configuré dans une autre langue que l'anglais, le nom du dossier "Brouillons" sera localisé.

Une fois que les commandes sont prêtes à être envoyées, exécutez la commande suivante :

  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send

Veillez simplement à désactiver le retour à la ligne dans le client de messagerie (l'interface web de Gmail revient à la ligne quoi qu'il arrive, vous devez donc utiliser un vrai client IMAP).

ATTENTION
---------
Il est toujours de votre responsabilité de vous assurer que le message électronique envoyé par votre programme de messagerie répond aux normes de votre projet. De nombreux projets n'aiment pas que des correctifs soient joints. Certains agents de messagerie transforment les rustines (par exemple, en faisant passer les lignes, en les envoyant sous format=flowed) d'une manière qui les fait échouer. Si vous ne vérifiez pas cela, vous recevrez des flammes furieuses qui vous ridiculiseront.

Thunderbird, en particulier, est connu pour ses problèmes.  Les utilisateurs de Thunderbird peuvent consulter cette page web pour plus d'informations :
  http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email

VOIR AUSSI
----------
linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)

GIT
---
Fait partie de la suite linkgit:git[1]

TRADUCTION
----------
Cette  page de manuel a été traduite par Jean-Noël Avila <jn.avila AT free DOT fr> et les membres du projet git-manpages-l10n. Veuillez signaler toute erreur de traduction par un rapport de bogue sur le site https://github.com/jnavila/git-manpages-l10n .
