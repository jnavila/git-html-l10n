GIT URLS[[URLS]]
----------------

一般的に、URLにはトランスポートプロトコル、リモートサーバーのアドレス、リポジトリへのパスなどの情報が含まれています。 トランスポートプロトコルによっては、これらの情報の一部が含まれていない場合があります。

Gitは、ssh、git、http、httpsのプロトコルをサポートしています（さらに、ftp、ftpsもフェッチに使用できますが、これは効率が悪く、非推奨ですので使用しないでください）。

ネイティブトランスポート (つまり git:// URL) は認証を行わないので、セキュリティのないネットワークでは注意が必要です。

以下の構文を使用することができます。

- ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/path/to/repo.git/
- git://host.xz{startsb}:port{endsb}/path/to/repo.git/
- http{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/
- ftp{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/

scpのような別の構文をsshプロトコルで使用することもできます。

- {startsb}user@{endsb}host.xz:path/to/repo.git/

この構文は、最初のコロンより前にスラッシュがない場合にのみ認識されます。これにより、コロンを含むローカルパスを区別することができます。例えば、ローカルパス `foo:bar` を絶対パスまたは `./foo:bar` として指定することで、ssh の url と誤認されるのを防ぐことができます。

sshおよびgitプロトコルでは、さらに ~username の展開がサポートされています。

- ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/
- git://host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/
- {startsb}user@{endsb}host.xz:/~{startsb}user{endsb}/path/to/repo.git/

Gitがネイティブにサポートしているローカルリポジトリについては、次のような構文を使用できます。

- /path/to/repo.git/
- \file:///path/to/repo.git/

ifndef::git-clone[]
このふたつの構文は、クローンを作るときに --local オプションが必要になることを除けば、ほとんど同じです。詳細は linkgit:git-clone[1] を参照してください。
endif::git-clone[]

ifdef::git-clone[]
この2つの構文はほとんど同じですが、前者は --local オプションを必要とします。
endif::git-clone[]

'git clone'、'git fetch'、'git pull'は、適切なバンドルファイルを受け取ることができ、'git push'はできません。linkgit:git-bundle[1]を参照してください。

Git が特定のトランスポート・プロトコルの扱い方を知らない場合は、'remote<transport>' リモート・ヘルパーがあればそれを使おうとします。リモートヘルパーを明示的に要求するには、次のような構文を使います。

- <transport>::<address>

ここで <address> には、パス、サーバーとパス、あるいは起動するリモートヘルパーが認識する任意の URL ライクな文字列を指定します。詳細は linkgit:gitremote-helpers[7] を参照してください。

似たような名前のリモートリポジトリが多数あり、それらに異なるフォーマットを使用したい場合（使用するURLが機能的なURLに書き換えられるような場合）、フォームに設定セクションを作成することができます。

------------
	[url "<actual url base>"]
		insteadOf = <other url base>
------------

例えば、このようになります。

------------
	[url "git://git.host.xz/"]
		insteadOf = host.xz:/path/to/
		insteadOf = work:
------------

"work:repo.git" や "host.xz:/path/to/repo.git" のような URL は、URLが "git://git.host.xz/repo" になるコンテキストで書き換えられます。

プッシュのみでURLを書き換えたい場合は、フォームに設定項目を作ります。

------------
	[url "<actual url base>"]
		pushInsteadOf = <other url base>
------------

例えば、このようになります。

------------
	[url "ssh://example.org/"]
		pushInsteadOf = git://example.org/
------------

"git://example.org/path/to/repo.git" のようなURLは、プッシュの際に "ssh://example.org/path/to/repo.git" に書き換えられますが、プルの際には元の URL が使われたままになります。
