git-mktag(1)
============

名称
--
git-mktag - Creates a tag object with extra validation


概述
--
[verse]
'git mktag'

描述
--

读取标准输入中的标签内容并创建一个标签对象。输出是新标签的 <object> 标识符。

这个命令主要等同于 linkgit:git-hash-object[1] 与 `-t tag -w -stdin` 一起调用。也就是说，这两个命令都会创建并写入一个在 `my-tag` 中找到的标签：

    git mktag <my-tag
    git hash-object -t tag -w --stdin <my-tag

不同的是，如果标签没有通过 linkgit:git-fsck[1] 的检查，mktag 进程会在写入标签前结束。

mktag 的 "fsck" 检查比 linkgit:git-fsck[1] 默认运行的更严格，因为所有的 `fsck.<msg-id>` 信息都从警告提升为错误（所以例如，缺少 "tagger" 行就是一个错误）。

Extra headers in the object are also an error under mktag, but ignored by linkgit:git-fsck[1]. This extra check can be turned off by setting the appropriate `fsck.<msg-id>` variable:

    git -c fsck.extraHeaderEntry=ignore mktag <my-tag-with-headers

选项
--

--strict::
	默认情况下，mktag 打开了相当于 linkgit:git-fsck[1] 的 `--strict` 模式。使用 `--no-strict` 来禁用它。

Tag Format
----------
将被送入该命令的标准输入的标签签名文件有一个非常简单的固定格式：四行的

  object <hash>
  type <typename>
  tag <tagname>
  tagger <tagger>

后面是一些 "可选的" 自由形式的信息（一些由旧版 Git 创建的标签可能没有 `tagger` 行）。 当信息存在时，会用一行空行与标头分开。 消息部分可能包含一个 Git 自己并不关心的签名，但可以用 gpg 验证。

GIT
---
属于 linkgit:git[1] 文档
