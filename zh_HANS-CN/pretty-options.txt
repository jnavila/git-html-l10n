--pretty[=<format>]::
--format=<format>::

	以指定的格式打印提交日志的内容，其中'<format>'可以是'oneline'、'short'、'medium'、'full'、'fuller'、'reference'、'email'、'raw'、'format:<string>'和'tformat:<string>'之一。 当'<format>'不是上述任何一种，并且其中有'%placeholder'时，它的作用就像给出'--pretty=tformat:<format>'一样。
+
参见 "PRETTY FORMATS "部分，了解每种格式的一些额外细节。 当'=<格式>'部分被省略时，它默认为'中等'。
+
注意：你可以在版本库配置中指定默认的漂亮格式（见linkgit:git-config[1]）。

--abbrev-commit::
	不要显示完整的40字节的十六进制提交对象名称，而是显示一个前缀，以唯一的方式命名该对象。 "--abbrev=<n>"选项可以用来指定前缀的最小长度（如果显示的话，它也会修改diff输出）。
+
这应该使"--pretty=oneline "对于使用80列终端的人来说更容易阅读。

--no-abbrev-commit::
	显示完整的40字节十六进制的提交对象名称。这否定了`--abbrev-commit`，无论是明确的还是由其他选项如"--oneline "暗示的。它还覆盖了`log.abbrevCommit`变量。

--oneline::
	这是"--pretty=oneline --abbrev-commit "的简写，一起使用。

--encoding=<encoding>::
	提交对象在其编码头中记录了日志信息所使用的编码；这个选项可以用来告诉命令以用户喜欢的编码来重新编码提交日志信息。 对于非管道命令，默认为UTF-8。请注意，如果一个对象声称是以`X`编码的，而我们是以`X`输出的，我们将逐字输出该对象；这意味着原始提交中的无效序列可能会被复制到输出中。

--expand-tabs=<n>::
--expand-tabs::
--no-expand-tabs::
	在输出中显示之前，在日志信息中进行标签扩展（用足够的空格替换每个标签，以填充到下一个显示列的'<n>'的倍数）。 `--expand-tabs`是`--expand-tabs=8`的简写，`--no-expand-tabs`是`--expand-tabs=0`的简写，它禁止标签扩展。
+
默认情况下，标签会以漂亮的格式展开，将日志信息缩进4个空格（即 "中"，这是默认的，"全"，和 "更全"）。

ifndef::git-rev-list[]
--notes[=<ref>]::
	在显示提交日志信息时，显示注释提交的说明（见linkgit:git-notes[1]）。 这是`git log`、`git show`和`git whatchanged`命令的默认设置，当命令行中没有给出`--pretty`、`--format`或`--oneline`选项时。
+
默认情况下，显示的注释来自于`core.notesRef`和`notes.displayRef`变量（或相应的环境覆盖）中列出的注释参考。更多细节见linkgit:git-config[1]。
+
有了一个可选的'<ref>'参数，就可以使用ref来寻找要显示的笔记。 当ref以`refs/notes/`开头时，可以指定完整的ref名称；当它以`notes/`开头时，`refs/`，否则`refs/notes/`前缀，形成ref的全名。
+
多个--音符选项可以组合起来，控制哪些音符被显示。例如。"--notes=foo "将只显示来自 "refs/notes/foo "的注释；"--notes=foo --notes "将同时显示来自 "refs/notes/foo "和默认注释的注释。

--no-notes::
	不显示注释。这否定了上面的`--notes`选项，因为它重新设置了显示注释的注释列表。 选项按照命令行给出的顺序进行解析，因此，例如"--notes --notes=foo --no-notes --notes=bar "将只显示来自 "refs/notes/bar "的注释。

--show-notes[=<ref>]::
--[no-]standard-notes::
	这些选项已被废弃。请使用上面的 --notes/-no-notes 选项来代替。
endif::git-rev-list[]

--show-signature::
	通过将签名传递给 `gpg --verify` 来检查已签名的提交对象的有效性，并显示输出。
