git-archimport(1)
=================

名称
--
git-archimport - 将 GNU Arch 仓库导入 Git 中


概述
--
[verse]
'git archimport' [-h] [-v] [-o] [-a] [-f] [-T] [-D <深度>] [-t <缓存目录>]
	       <归档>/<分支>[:<git 分支>]...

描述
--
Imports a project from one or more GNU Arch repositories. It will follow branches and repositories within the namespaces defined by the <archive>/<branch> parameters supplied. If it cannot find the remote branch a merge comes from it will just import it as a regular commit. If it can find it, it will mark it as a merge whenever possible (see discussion below).

该脚本希望你提供关键的根目录，它可以从 'initial' 或 'tag' 类型的 Arch 提交开始导入。它将跟踪并导入所提供的根目录下的新分支。

它希望只处理一个项目。如果它看到有不同根目录的分支，它将拒绝运行。在这种情况下，编辑你的 <归档>/<分支> 参数，以明确定义导入的范围。

'git archimport' uses `tla` extensively in the background to access the Arch repository. Make sure you have a recent version of `tla` available in the path. `tla` must know about the repositories you pass to 'git archimport'.

对于初始导入，'git archimport' 希望能在一个空目录中找到自己。要跟踪一个使用 Arch 的项目的发展，重新运行 'git archimport'，参数与初始导入相同，以执行增量导入。

While 'git archimport' will try to create sensible branch names for the archives that it imports, it is also possible to specify Git branch names manually. To do so, write a Git branch name after each <archive>/<branch> parameter, separated by a colon. This way, you can shorten the Arch branch names and convert Arch jargon to Git jargon, for example mapping a "PROJECT{litdd}devo{litdd}VERSION" branch to "master".

Associating multiple Arch branches to one Git branch is possible; the result will make the most sense only if no commits are made to the first branch, after the second branch is created. Still, this is useful to convert Arch repositories that had been rotated periodically.


合并
--
Arch 的补丁合并数据在 Git 中也被用来标记合并。Git 并不关心对补丁的追踪，只有当一个分支包含了自分叉点以来的所有提交时，才会考虑合并。最终的结果是，Git 会很好地了解分支的分歧程度。所以导入过程确实会丢失一些补丁交易的元数据。

幸运的是，当你尝试合并从 Arch 导入的分支时，Git 会找到一个好的合并基础，而且它有很大的机会识别出在分支之间被交易的不符合顺序的补丁。

选项
--

-h::
	显示用途。

-v::
	详细输出。

-T::
	多标签。将为每个提交创建一个标签，反映 Arch 库中的提交名称。

-f::
	Use the fast patchset import strategy. This can be significantly faster for large trees, but cannot handle directory renames or permissions changes. The default strategy is slow and safe.

-o::
	Use this for compatibility with old-style branch names used by earlier versions of 'git archimport'. Old-style branch names were category{litdd}branch, whereas new-style branch names are archive,category{litdd}branch{litdd}version. In both cases, names given on the command-line will override the automatically-generated ones.

-D <深度>::
	Follow merge ancestry and attempt to import trees that have been merged from. Specify a depth greater than 1 if patch logs have been pruned.

-a::
	尝试在 `http://mirrors.sourcecontrol.net` 上自动注册档案，这在 -D 选项下特别有用。

-t <缓存目录>::
	重写默认缓存目录。


<归档>/<分支>::
	<归档>/<分支> 标识符的格式是 `tla log` 能理解的。


GIT
---
属于 linkgit:git[1] 文档
