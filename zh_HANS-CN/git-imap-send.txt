git-imap-send(1)
================

名称
--
git-imap-send - 从标准输入流中向 IMAP 文件夹发送补丁集


概述
--
[verse]
'git imap-send' [-v] [-q] [--[no-]curl]


描述
--
This command uploads a mailbox generated with 'git format-patch' into an IMAP drafts folder. This allows patches to be sent as other email is when using mail clients that cannot read mailbox files directly. The command also works with any general mailbox in which emails have the fields "From", "Date", and "Subject" in that order.

典型的用法是这样的：

git format-patch --signoff --stdout --attach origin | git imap-send


选项
--

-v::
--verbose::
	详细日志。

-q::
--quiet::
	静默运行。

--curl::
	Use libcurl to communicate with the IMAP server, unless tunneling into it. Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND option set.

--no-curl::
	Talk to the IMAP server using git's own IMAP routines instead of using libcurl. Ignored if Git was built with the NO_OPENSSL option set.


配置
--

要使用该工具，`imap.folder` 和 `imap.tunnel` 或 `imap.host` 必须被设置为适当的值。

include::includes/cmd-config-section-rest.txt[]

include::config/imap.txt[]

实例
--
使用隧道模式：

..........................
[imap]
    folder = "INBOX.Drafts"
    tunnel = "ssh -q -C user@example.com /usr/bin/imapd ./Maildir 2> /dev/null"
..........................

使用直接模式：

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imap://imap.example.com
    user = bob
    pass = p4ssw0rd
.........................

使用 SSL 的直接模式：

.........................
[imap]
    folder = "INBOX.Drafts"
    host = imaps://imap.example.com
    user = bob
    pass = p4ssw0rd
    port = 123
    ; sslVerify = false
.........................


[NOTE]
在排除故障时，如果你怀疑连接有问题的原因是你在试图建立（或已经建立）的私人服务器 `example.com`上使用的证书可能没有被正确验证，你可能想使用 `sslVerify=false`。

使用 Gmail 的 IMAP 界面：

---------
[imap]
	folder = "[Gmail]/Drafts"
	host = imaps://imap.gmail.com
	user = user@gmail.com
	port = 993
---------

[NOTE]
如果你得到一个错误，即 “文件夹不存在”，你可能需要改用： `folder = "[Google Mail]/Drafts"` 。

[NOTE]
如果你的 Gmail 账户被设置为英语以外的其他语言，"Drafts" 文件夹的名称将被本地化。

一旦准备好发送提交，请运行以下命令：

  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send

只要确保禁用电子邮件客户端的换行功能（Gmail 的网络界面无论如何都会换行，所以你需要使用真正的 IMAP 客户端）。

小心
--
It is still your responsibility to make sure that the email message sent by your email program meets the standards of your project. Many projects do not like patches to be attached. Some mail agents will transform patches (e.g. wrap lines, send them as format=flowed) in ways that make them fail. You will get angry flames ridiculing you if you don't check this.

Thunderbird in particular is known to be problematic.  Thunderbird
users may wish to visit this web page for more information:
  https://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email

参见
--
linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)

GIT
---
属于 linkgit:git[1] 文档
