git-patch-id(1)
===============

名称
--
git-patch-id - 计算补丁的唯一 ID

概述
--
[verse]
'git patch-id' [--stable | --unstable | --verbatim]

描述
--
从标准输入读取一个补丁，并计算出它的补丁 ID。

A "patch ID" is nothing but a sum of SHA-1 of the file diffs associated with a patch, with line numbers ignored. As such, it's "reasonably stable", but at the same time also reasonably unique, i.e., two patches that have the same "patch ID" are almost guaranteed to be the same thing.

这个命令的主要用途是寻找可能的重复提交。

When dealing with 'git diff-tree' output, it takes advantage of the fact that the patch is prefixed with the object name of the commit, and outputs two 40-byte hexadecimal strings. The first string is the patch ID, and the second string is the commit ID. This can be used to make a mapping from patch ID to commit ID.

选项
--

--verbatim::
	计算输入的补丁 ID，因为它是给定的，不要剥离任何空白字符。

	如果 patchid.verbatim 为真，这是默认的。

--stable::
	使用一个 "稳定的" 哈希值之和作为补丁 ID。有了这个选项：
	 - Reordering file diffs that make up a patch does not affect the ID. In particular, two patches produced by comparing the same two trees with two different settings for "-O<orderfile>" result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;

	 - 结果与 git 1.9 及更早版本产生的值不同，或者在配置了 "不稳定" 哈希值（见下文 --unstable）时产生的值不同——即使在没有使用 "-O<orderfile>" 的情况下用于 diff 输出，从而使存储这种 "不稳定“或历史补丁标识的现有数据库无法使用。

	 - 补丁中的所有空白都将被忽略，并且不影响 id。

	如果 patchid.stable 设置为 true，则默认使用此值。

--unstable::
	Use an "unstable" hash as the patch ID. With this option, the result produced is compatible with the patch-id value produced by git 1.9 and older and whitespace is ignored. Users with pre-existing databases storing patch-ids produced by git 1.9 and older (who do not deal with reordered patches) may want to use this option.

	这是默认设置。

GIT
---
属于 linkgit:git[1] 文档
