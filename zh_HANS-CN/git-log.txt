git-log(1)
==========

名称
--
git-log - 显示提交日志


概述
--
[verse]
'git log' [<options>] [<revision-range>] [[--] <path>...]

描述
--
显示提交日志。

:git-log: 1
include::rev-list-description.txt[]

该命令采用适用于 linkgit:git-rev-list[1] 命令的选项来控制显示的内容和方式，以及适用于 linkgit:git-diff[1] 命令的选项来控制每次提交引入的更改的显示方式。


选项
--

--follow::
	继续列出一个文件的历史，超过重命名（只对单个文件有效）。

--no-decorate::
--装饰[=短|全|自动|无]::
	Print out the ref names of any commits that are shown. If 'short' is specified, the ref name prefixes 'refs/heads/', 'refs/tags/' and 'refs/remotes/' will not be printed. If 'full' is specified, the full ref name (including prefix) will be printed. If 'auto' is specified, then if the output is going to a terminal, the ref names are shown as if 'short' were given, otherwise no ref names are shown. The option `--decorate` is short-hand for `--decorate=short`. Default to configuration value of `log.decorate` if configured, otherwise, `auto`.

--decorate-refs=<pattern>::
--decorate-refs-exclude=<pattern>::
	对于每个候选者，如果它与`--decorate-refs-exclude`给出的任何模式相匹配，或者它与`--decorate-refs`给出的任何模式不匹配，就不要将其用于装饰。`log.excludeDecoration`配置选项允许从装饰中排除参考文献，但明确的`--decorate-refs`模式将覆盖`log.excludeDecoration`的匹配。
+
If none of these options or config settings are given, then references are used as decoration if they match `HEAD`, `refs/heads/`, `refs/remotes/`, `refs/stash/`, or `refs/tags/`.

--clear-decorations::
	When specified, this option clears all previous `--decorate-refs` or `--decorate-refs-exclude` options and relaxes the default decoration filter to include all references. This option is assumed if the config value `log.initialDecorationSet` is set to `all`.

--source::
	打印出命令行上给出的每一次提交所依据的参考名称。

--[no-]mailmap::
--[no-]use-mailmap::
	使用 mailmap 文件将作者和提交者的名字和电子邮件地址映射为规范的真实姓名和电子邮件地址。参见 linkgit:git-shortlog[1]。

--full-diff::
	没有这个标志，`git log -p <path>...`会显示触及指定路径的提交，以及关于相同指定路径的差异。 有了这个，就会显示触及指定路径的提交的全部差异；这意味着"<path>... "只限制提交，而不限制这些提交的差异。
+
请注意，这将影响所有基于diff的输出类型，例如那些由`--stat`产生的输出。

--log-size::
	在每次提交的输出中包括一行"`日志大小<number>'"，其中<number>是该提交信息的长度，单位为字节。 旨在加快从`git log`输出中读取日志信息的工具的速度，允许它们提前分配空间。

include::line-range-options.txt[]

<revision-range>::
	Show only commits in the specified revision range. When no <revision-range> is specified, it defaults to `HEAD` (i.e. the whole history leading to the current commit). `origin..HEAD` specifies all the commits reachable from the current commit (i.e. `HEAD`), but not from `origin`. For a complete list of ways to spell <revision-range>, see the 'Specifying Ranges' section of linkgit:gitrevisions[7].

[--] <路径>...::
	只显示那些足以解释符合指定路径的文件是如何形成的提交。 有关细节和其他简化模式，请参见下面的'历史简化'。
+
当出现混淆时，路径可能需要以`--`为前缀，以便将其与选项或修订范围分开。

include::rev-list-options.txt[]

include::pretty-formats.txt[]

差异格式化
-----

默认情况下，`git log`不会产生任何差异输出。下面的选项可以用来显示每次提交所做的修改。

注意，除非明确给出`--diff-merges`的变体（包括短的`-m`，`-c`和`-cc`选项），否则合并提交不会显示差异，即使选择了`--patch`这样的差异格式，也不会匹配`-S`这样的搜索选项。例外情况是当`--first-parent`被使用时，在这种情况下，`first-parent`是默认格式。

:git-log: 1
:diff-merges-default: `off`
include::diff-options.txt[]

include::diff-generate-patch.txt[]

EXAMPLES
--------
`git log --no-merges`。::

	显示整个提交历史，但跳过任何合并内容

`git log v2.6.12.. include/scsi drivers/scsi`::

	显示自版本'v2.6.12'以来改变`include/scsi`或`drivers/scsi`子目录中任何文件的所有提交。

`git log --since="2 weeks ago" -- gitk`。::

	显示过去两周内对文件'gitk'的修改。 `--`是必要的，以避免与名为'gitk'的*分支相混淆。

`git log --name-status release..test`::

	显示在 "test "分支中但尚未在 "release "分支中的提交，以及每个提交修改的路径列表。

`git log --follow builtin/rev-list.c`。::

	显示改变`builtin/rev-list.c`的提交，包括那些在文件被赋予现在名字之前发生的提交。

`git log --branches --not --remotes=origin`。::

	显示所有在本地分支中但不在 "origin "的远程跟踪分支中的提交（你有而origin没有的东西）。

`git log master --not --remotes=*/master`。::

	显示所有在本地主库但不在任何远程仓库主库分支中的提交。

`git log -p -m -first-parent`。::

	显示包括变化差异的历史，但只从 "主分支 "的角度，跳过来自合并分支的提交，并显示合并带来的全部变化差异。 这只有在遵循严格的政策，在停留在一个集成分支时合并所有主题分支时才有意义。

`git log -L '/int main/',/^}/:main.c`。::

	显示了文件`main.c`中的函数`main()`是如何随时间演变的。

`git log -3`::

	将显示的提交数量限制在3个。

DISCUSSION
----------

include::i18n.txt[]

配置
--

核心变量见 linkgit:git-config[1] ，与 diff 生成相关的设置见 linkgit:git-diff[1] 。

format.pretty::
	`--format`选项的默认值。 (见上面的 "漂亮的格式"。)默认为 "中等"。

i18n.logOutputEncoding::
	显示日志时要使用的编码。 (见上面的 "讨论"。)如果设置了，默认为`i18n.commitEncoding`的值，否则为UTF-8。

include::includes/cmd-config-section-rest.txt[]

include::config/log.txt[]

include::config/notes.txt[]

GIT
---
属于 linkgit:git[1] 文档
