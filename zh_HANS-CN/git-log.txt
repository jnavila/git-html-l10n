git-log(1)
==========

名称
--
git-log - 显示提交日志


概述
--
[verse]
'git log' [<options>] [<revision-range>] [[--] <path>...]

描述
--
显示提交日志。

:git-log: 1
include::rev-list-description.txt[]

该命令采用适用于 linkgit:git-rev-list[1] 命令的选项来控制显示的内容和方式，以及适用于 linkgit:git-diff[1] 命令的选项来控制每次提交引入的更改的显示方式。


选项
--

--follow::
	继续列出文件的历史记录，包括重命名之后的情况（仅适用于单个文件）。

--no-decorate::
--decorate[=short|full|auto|no]::
	Print out the ref names of any commits that are shown. If 'short' is specified, the ref name prefixes 'refs/heads/', 'refs/tags/' and 'refs/remotes/' will not be printed. If 'full' is specified, the full ref name (including prefix) will be printed. If 'auto' is specified, then if the output is going to a terminal, the ref names are shown as if 'short' were given, otherwise no ref names are shown. The option `--decorate` is short-hand for `--decorate=short`. Default to configuration value of `log.decorate` if configured, otherwise, `auto`.

--decorate-refs=<pattern>::
--decorate-refs-exclude=<pattern>::
	对于每个候选引用，在以下情况下不要将其用于装饰（decorate）：若它与`--decorate-refs-exclude`指定的任何模式匹配，或者若它不与`--decorate-refs`指定的任何模式匹配。配置选项`log.excludeDecoration`允许从装饰中排除引用，但是在`log.excludeDecoration`中的匹配项将被`--decorate-refs`模式中的显式指定所覆盖。
+
如果没有给出这些选项或配置设置中的任何一个，那么如果引用与 `HEAD` 、`refs/heads/`、`refs/remotes/` 、`refs/stash/` 或 `refs/tags/` 匹配，则使用引用作为装饰。

--clear-decorations::
	当指定了该选项时，它会清除所有先前的 `--decorate-refs` 或 `--decorate-refs-exclude` 选项，并放宽默认的装饰过滤器以包括所有引用。如果配置值 `log.initialDecorationSet` 设置为 `all`，则假定使用此选项。

--source::
	打印出通过命令行给定的引用名称，以便触及每个提交。

--[no-]mailmap::
--[no-]use-mailmap::
	使用 mailmap 文件将作者和提交者的名称和电子邮件地址映射到规范的真实名称和电子邮件地址。请参阅 linkgit:git-shortlog[1]。

--full-diff::
	Without this flag, `git log -p <path>...` shows commits that touch the specified paths, and diffs about the same specified paths. With this, the full diff is shown for commits that touch the specified paths; this means that "<path>..." limits only commits, and doesn't limit diff for those commits.
+
请注意，这会影响所有基于差异的输出类型。例如：由 `--stat` 等产生的输出。

--log-size::
	Include a line ``log size <number>'' in the output for each commit, where <number> is the length of that commit's message in bytes. Intended to speed up tools that read log messages from `git log` output by allowing them to allocate space in advance.

include::line-range-options.txt[]

<revision-range>::
	Show only commits in the specified revision range. When no <revision-range> is specified, it defaults to `HEAD` (i.e. the whole history leading to the current commit). `origin..HEAD` specifies all the commits reachable from the current commit (i.e. `HEAD`), but not from `origin`. For a complete list of ways to spell <revision-range>, see the 'Specifying Ranges' section of linkgit:gitrevisions[7].

[--] <path>...::
	Show only commits that are enough to explain how the files that match the specified paths came to be. See 'History Simplification' below for details and other simplification modes.
+
当出现混淆时，路径可能需要以`--`为前缀，以便将其与选项或修订范围分开。

include::rev-list-options.txt[]

include::pretty-formats.txt[]

差异格式化
-----

默认情况下，`git log`不会产生任何差异输出。下面的选项可以用来显示每次提交所做的修改。

请注意，除非明确给出了 `--diff-merges` 变体（包括短 `-m`、`-c`、`--cc` 和 `--dd` 选项），否则合并提交不会显示差异，即使选择了 `--patch` 等差异格式，也不会匹配 `-S` 等搜索选项。使用 `--first-parent` 时例外，在这种情况下，`--first-parent` 是合并提交的默认格式。

:git-log: 1
:diff-merges-default: `off`
include::diff-options.txt[]

include::diff-generate-patch.txt[]

实例
--
`git log --no-merges`::

	显示整个提交历史，但跳过任何合并内容

`git log v2.6.12.. include/scsi drivers/scsi`::

	显示自版本 'v2.6.12' 以来改变 `include/scsi` 或 `drivers/scsi` 子目录中任何文件的所有提交

`git log --since="2 weeks ago" -- gitk`::

	Show the changes during the last two weeks to the file 'gitk'. The `--` is necessary to avoid confusion with the *branch* named 'gitk'

`git log --name-status release..test`::

	显示在 "test "分支中但尚未在 "release "分支中的提交，以及每个提交修改的路径列表。

`git log --follow builtin/rev-list.c`::

	显示改变`builtin/rev-list.c`的提交，包括那些在文件被赋予现在名字之前发生的提交。

`git log --branches --not --remotes=origin`::

	显示所有在本地分支中但不在 "origin "的远程跟踪分支中的提交（你有而origin没有的东西）。

`git log master --not --remotes=*/master`::

	显示所有在本地主库但不在任何远程仓库主库分支中的提交。

`git log -p -m --first-parent`::

	Shows the history including change diffs, but only from the ``main branch'' perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges. This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch.

`git log -L '/int main/',/^}/:main.c`::

	显示了文件`main.c`中的函数`main()`是如何随时间演变的。

`git log -3`::

	将显示的提交数量限制在3个。

讨论
--

include::i18n.txt[]

配置
--

核心变量见 linkgit:git-config[1] ，与 diff 生成相关的设置见 linkgit:git-diff[1] 。

format.pretty::
	Default for the `--format` option. (See 'Pretty Formats' above.) Defaults to `medium`.

i18n.logOutputEncoding::
	Encoding to use when displaying logs. (See 'Discussion' above.) Defaults to the value of `i18n.commitEncoding` if set, and UTF-8 otherwise.

include::includes/cmd-config-section-rest.txt[]

include::config/log.txt[]

include::config/notes.txt[]

GIT
---
属于 linkgit:git[1] 文档
