git-credential-cache(1)
=======================

名称
--
git-credential-cache - 在内存中临时存储密码的助手

概述
--
-----------------------------
git config credential.helper 'cache [<多个选项>]'
-----------------------------

描述
--

该命令会缓存凭证，供未来的 Git 程序使用。 存储的凭据保存在 cache-daemon 进程的内存中（而不是写入文件），并在可配置的超时后被遗忘。如果 cache-daemon 死机，例如系统重启，证书会更快被遗忘。缓存可通过 Unix 域套接字访问，并通过文件系统权限限制为当前用户访问。

你可能不想直接调用这条命令；它的目的是作为 Git 其他部分的凭证助手。请参阅 linkgit:gitcredentials[7] 或下面的 `例子`。

选项
--

--timeout <秒>::

	缓存证书的秒数（默认值：900）。

--socket <路径>::

	使用 `<路径>` 联系正在运行的缓存守护进程（或在未启动缓存守护进程的情况下启动新的缓存守护进程）。 默认路径是 `$XDG_CACHE_HOME/git/credential/socket`，除非存在 `~/.git-credential-cache/`，在这种情况下会使用 `~/.git-credential-cache/socket`。 如果您的主目录位于网络挂载的文件系统上，可能需要将其更改为本地文件系统。必须指定绝对路径。

控制守护进程
------

如果希望守护进程提前退出，在超时前忘记所有缓存的凭据，可以发出 `exit`操作：

--------------------------------------
git credential-cache exit
--------------------------------------

实例
--

这个助手的意义在于减少你必须输入用户名或密码的次数。比如说：

------------------------------------
$ git config credential.helper cache
$ git push http://example.com/repo.git
Username: <输入你的用户名>
Password: <输入你的密码>

[再工作 5 分钟]
$ git push http://example.com/repo.git
[自动使用您的证书]
------------------------------------

您可以通过 credential.helper 配置变量提供选项（本例将缓存时间增加到 1 小时）：

-------------------------------------------------------
$ git config credential.helper 'cache --timeout=3600'
-------------------------------------------------------

GIT
---
属于 linkgit:git[1] 文档
