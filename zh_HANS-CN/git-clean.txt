git-clean(1)
============

名称
--
git-clean - Remove untracked files from the working tree

概述
--
[verse]
'git clean' [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] [<pathspec>...]

描述
--

从当前目录开始，通过递归删除不在版本控制之下的文件来清理工作区。

通常情况下，只有 Git 未知的文件会被删除，但如果指定了 `-x` 选项，被忽略的文件也会被删除。例如，这对删除所有构建产品很有用。

如果给出任何可选的`<路径规范>...`参数，只有那些与路径规范相匹配的路径会受到影响。

选项
--
-d::
	通常，当没有指定 <路径规范> 时，git clean 不会递归到未追踪的目录，以避免删除太多。 指定 -d 可以让它也递归到这些目录。 如果指定了<路径规范>，-d 就不重要了；所有符合指定路径的未追踪文件（`--force` 下提到的嵌套的 git 目录除外）将被删除。

-f::
--force::
	如果 Git 配置变量 clean.requireForce 没有设置为 false，'git clean' 将拒绝删除文件或目录，除非给出 -f 或 -i。 除非给出第二个 -f，否则 Git 将拒绝修改未跟踪的嵌套 git 仓库（有.git子目录的目录）。

-i::
--interactive::
	显示会做什么，并以交互方式清理文件。详见 “交互模式”。

-n::
--dry-run::
	实际上不要删除任何东西，只是显示会做什么。

-q::
--quiet::
	要安静，只报告错误，但不报告成功删除的文件。

-e <pattern>::
--exclude=<pattern>::
	在标准的忽略规则之外，使用给定的排除模式（见 linkgit:gitignore[5]）。

-x::
	不要使用标准的忽略规则（见linkgit:gitignore[5]），但仍然使用命令行中用 `-e` 选项给出的忽略规则。 这允许删除所有未跟踪的文件，包括构建产品。 这可以用来（可能与 'git restore' 或 'git reset' 一起使用）创建一个原始的工作目录来测试一个干净的构建。

-X::
	只删除被 Git 忽略的文件。 这对于从头开始重建一切，但保留手动创建的文件可能很有用。

交互模式
----
当命令进入交互式模式时，它会显示要清理的文件和目录，并进入其交互式命令循环。

The command loop shows the list of subcommands available, and gives a prompt "What now> ". In general, when the prompt ends with a single '>', you can pick only one of the choices given and type return, like this:

------------
    *** Commands ***
	1: clean                2: filter by pattern    3: select by numbers
	4: ask each             5: quit                 6: help
    What now> 1
------------

你也可以在上面输入 `c` 或 `clean`，只要选择是唯一的。

主命令循环有 6 个子命令。

clean::

   开始清理文件和目录，然后退出。

按模式过滤::

   这将显示要删除的文件和目录，并发出 "Input ignore patterns>>（输入忽略模式）" 提示。你可以输入以空格分隔的模式来排除文件和目录的删除。 例如，"*.c *.h " 将排除以 ".c " 和 ".h" 结尾的文件不被删除。当你对过滤后的结果满意时，按回车（空）键回到主菜单。

按数字选择::

   这显示了要删除的文件和目录，并发出 "Select items to delete>>（选择要删除的项目）"提示。当提示像这样以双 '>>' 结束时，你可以做一个以上的选择，用空格或逗号连接起来。 你也可以说范围。 例如，"2-5 7,9" 可以从列表中选择 2,3,4,5,7,9。 如果一个范围内的第二个数字被省略了，所有剩下的项目都会被选中。 例如："7-" 从列表中选择 7、8、9。 你可以输入 '*' 来选择所有项目。 另外，当你对过滤后的结果满意时，按回车（空）键回到主菜单。

逐一询问::

  这将开始进行清理，你必须逐一确认，以便删除项目。请注意，这个动作没有上述两个动作那么有效。

quit::

  这让你不用做清理就可以退出。

help::

  显示交互式 git-clean 的简要用法。

配置
--

include::includes/cmd-config-section-all.txt[]

include::config/clean.txt[]

参见
--
linkgit:gitignore[5]

GIT
---
属于 linkgit:git[1] 文档
