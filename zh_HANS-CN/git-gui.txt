git-gui(1)
==========

名称
--
git-gui - 一个可移植的git图形界面

概述
--
[verse]
'git gui' [<命令>] [参数]

描述
--
一个基于 Tcl/Tk 的 Git 图形化用户界面。 'git gui' 的重点是允许用户对他们的仓库进行修改，包括做出新的提交，修改现有的提交，创建分支，执行本地合并，以及获取/推送到远程仓库。

与 'gitk' 不同，'git gui' 专注于提交生成和单一文件注释，不显示项目历史。 不过它提供了菜单操作，可以从 'git gui' 中启动 'gitk' 会话。

众所周知，'git gui' 可以在所有流行的UNIX系统、Mac OS X 和 Windows（在 Cygwin 和 MSYS 下）运行。 在可能的范围内，遵循操作系统特定的用户界面准则，使 'git gui' 成为用户的一个相当原始的界面。

命令
--
历史追溯::
	在指定的版本（如果没有指定，则为工作目录）上对指定的文件启动一个历史追溯查看器。

浏览器::
	启动一个树状浏览器，显示指定提交中的所有文件。 通过浏览器选择的文件会在历史追溯查看器中打开。

citool::
	启动 'git gui' 并安排在退出并返回 shell 之前正好做一次提交。 该界面只限于提交操作，稍微减少了应用程序的启动时间，并简化了菜单栏。

版本::
	显示当前运行的 'git gui' 的版本。


例如
--
`git gui blame Makefile`::

	显示当前工作目录中 'Makefile' 文件的内容，并为每一行的原作者和谁把这一行移到当前位置提供注释。 未提交的文件有注释，未提交的修改（如果有的话）被明确地归结为 ‘尚未提交’。

`git gui blame v0.99.8 Makefile`::

	显示修订版 'v0.99.8' 中 'Makefile' 的内容，并为每一行提供注释。 与上面的例子不同，该文件是从对象数据库而不是工作目录中读取的。

`git gui blame --line=100 Makefile`::

	如上所述加载注释，并自动滚动视图至第 '100' 行中心。

`git gui citool`::

	进行一次提交，完成后返回到 shell。 如果窗口被关闭，而不是通过提交的方式，该命令会返回一个非零的退出代码。

`git gui citool --amend`::

	自动进入界面的 ‘修正最后提交’ 模式。

`git gui citool --nocommit`::

	和普通的 citool 一样，但不做提交，而是以零退出代码结束。它仍然会检查索引是否包含任何未合并的条目，所以你可以把它当作 linkgit:git-mergetool[1] 的 GUI 版本

`git citool`::

	与 `git gui citool`（上文）相同。

`git gui browser maint`::

	显示 'maint' 分支的树的浏览器。 在浏览器中选择的文件可以用内部责备查看器查看。

参见
--
linkgit:gitk[1]::
	Git 仓库浏览器。 gitk 是由 'git gui' 的 Repository Visualize 操作启动的实用程序，显示分支、提交历史和文件差异。

其它
--
'git gui' 实际上是作为一个独立项目进行维护的，但为了方便最终用户，其稳定版本作为 Git 套件的一部分发布。

'git gui' 项目的官方仓库可以在以下网址找到：

  https://github.com/prati0100/git-gui.git/

GIT
---
属于 linkgit:git[1] 文档
