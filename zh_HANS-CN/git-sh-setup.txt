git-sh-setup(1)
===============

名称
--
git-sh-setup - 常见 Git shell 脚本设置代码

概述
--
[verse]
'. "$(git --exec-path)/git-sh-setup"'

描述
--

This is not a command the end user would want to run. Ever. This documentation is meant for people who are studying the Porcelain-ish scripts and/or are writing new ones.

'git sh-setup' 脚本小程序的设计目的是让其他 shell 脚本（使用 `.`）设置一些指向正常 Git 目录的变量和一些辅助 shell 函数。

Before sourcing it, your script should set up a few variables; `USAGE` (and `LONG_USAGE`, if any) is used to define the message given by `usage()` shell function. `SUBDIRECTORY_OK` can be set if the script can run from a subdirectory of the working tree (some commands do not).

脚本小程序会设置 `GIT_DIR` 和 `GIT_OBJECT_DIRECTORY` shell 变量，但*不会*导出它们到环境中。

功能
--

die::
	将提供的错误信息发送到标准错误流后退出。

usage::
	结束，并显示使用信息。

set_reflog_action::
	Set `GIT_REFLOG_ACTION` environment to a given string (typically the name of the program) unless it is already set. Whenever the script runs a `git` command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref.

git_editor::
	在给定文件上运行用户选择的编辑器（GIT_EDITOR、core.editor、VISUAL 或 EDITOR），但如果未指定编辑器且终端为哑终端，则会出错。

is_bare_repository::
	会向标准输出流输出 `true` 或 `false`，以指示版本库是否为裸仓库（即没有任何关联的工作区）。

cd_to_toplevel::
	运行 chdir 到工作树的顶层。

require_work_tree::
	会检查当前目录是否在仓库的工作区中，否则就挂起。

require_work_tree_exists::
	checks if the working tree associated with the repository exists, and otherwise dies. Often done before calling cd_to_toplevel, which is impossible to do if there is no working tree.

require_clean_work_tree <行为> [<提示>]::
	checks that the working tree and index associated with the repository have no uncommitted changes to tracked files. Otherwise it emits an error message of the form `Cannot <action>: <reason>. <hint>`, and dies. Example:
+
----------------
require_clean_work_tree rebase "请提交或者贮藏他们。"
----------------

get_author_ident_from_commit::
	输出与 eval 配合使用的代码，以设置指定提交的 GIT_AUTHOR_NAME、GIT_AUTHOR_EMAIL 和 GIT_AUTHOR_DATE 变量。

create_virtual_base::
	修改第一个文件，只保留与第二个文件相同的行。如果共同内容不足，则第一个文件留空。结果适合作为三向合并的虚拟基础输入。

GIT
---
属于 linkgit:git[1] 文档
