git-column(1)
=============

名称
--
git-column - 以列展示数据

概述
--
[verse]
'git column' [--command=<名称>] [--[raw-]mode=<模式>] [--width=<宽度>]
	     [--indent=<字符串>] [--nl=<字符串>] [--padding=<n>]

描述
--
该命令将其标准输入的行格式化为一个多列表格。每个输入行占据表格的一个单元。它被其他Git命令内部使用，以将输出信息格式化为列。

选项
--
--command=<名称>::
	使用配置变量column.<名称>和column.ui查询布局模式。

--mode=<模式>::
	指定布局模式。选项的语法见 linkgit:git-config[1] 中column.ui变量的配置。

--raw-mode=<n>::
	与--模式选项相同，但该选项将模式编码为一个数字。这主要是被其他已经解析了布局模式的命令使用。

--width=<宽度>::
	指定终端的宽度。默认情况下，'git column'会检测终端宽度，如果无法检测，则会将其宽度设置为80。

--indent=<字符串>::
	设置要在每一行的开头打印的字符串。

--indent=<字符串>::
	在每一行的末尾要打印的字符串，包括换行符。

--padding=<N>::
	列之间的空格数，默认为一个空格。

实例
--

按列格式化数据：
------------
$ seq 1 24 | git column --mode=column --padding=5
1      4      7      10     13     16     19     22
2      5      8      11     14     17     20     23
3      6      9      12     15     18     21     24
------------

按行格式化数据：
------------
$ seq 1 21 | git column --mode=row --padding=5
1      2      3      4      5      6      7
8      9      10     11     12     13     14
15     16     17     18     19     20     21
------------

在一个列宽不等的表格中列出一些标签：
------------
$ git tag --list 'v2.4.*' --column=row,dense
v2.4.0  v2.4.0-rc0  v2.4.0-rc1  v2.4.0-rc2  v2.4.0-rc3
v2.4.1  v2.4.10     v2.4.11     v2.4.12     v2.4.2
v2.4.3  v2.4.4      v2.4.5      v2.4.6      v2.4.7
v2.4.8  v2.4.9
------------

配置
--

include::includes/cmd-config-section-all.txt[]

include::config/column.txt[]

GIT
---
属于 linkgit:git[1] 文档
